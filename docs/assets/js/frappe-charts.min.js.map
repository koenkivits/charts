{"version":3,"file":"frappe-charts.min.js","sources":["../../../src/js/utils/dom.js","../../../node_modules/style-inject/dist/style-inject.es.js","../../../src/js/utils/constants.js","../../../src/js/objects/SvgTip.js","../../../src/js/utils/helpers.js","../../../src/js/utils/draw-utils.js","../../../src/js/utils/colors.js","../../../src/js/utils/draw.js","../../../src/js/utils/animate.js","../../../src/js/utils/animation.js","../../../src/js/charts/BaseChart.js","../../../src/js/utils/export.js","../../../src/css/chartsCss.js","../../../src/js/charts/AggregationChart.js","../../../src/js/utils/date-utils.js","../../../src/js/objects/ChartComponents.js","../../../src/js/charts/PercentageChart.js","../../../src/js/charts/PieChart.js","../../../src/js/utils/intervals.js","../../../src/js/charts/Heatmap.js","../../../src/js/utils/axis-chart-utils.js","../../../src/js/charts/AxisChart.js","../../../src/js/charts/DonutChart.js","../../../src/js/chart.js","../../../src/js/index.js"],"sourcesContent":["export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function findNodeIndex(node) {\n  var i = 0;\n  while (node.previousSibling) {\n    node = node.previousSibling;\n    i++;\n  }\n  return i;\n}\n\n$.create = (tag, o) => {\n  var element = document.createElement(tag);\n\n  for (var i in o) {\n    var val = o[i];\n\n    if (i === \"inside\") {\n      $(val).appendChild(element);\n    } else if (i === \"around\") {\n      var ref = $(val);\n      ref.parentNode.insertBefore(element, ref);\n      element.appendChild(ref);\n    } else if (i === \"styles\") {\n      if (typeof val === \"object\") {\n        Object.keys(val).map((prop) => {\n          element.style[prop] = val[prop];\n        });\n      }\n    } else if (i in element) {\n      element[i] = val;\n    } else {\n      element.setAttribute(i, val);\n    }\n  }\n\n  return element;\n};\n\nexport function getOffset(element) {\n  let rect = element.getBoundingClientRect();\n  return {\n    // https://stackoverflow.com/a/7436602/6495043\n    // rect.top varies with scroll, so we add whatever has been\n    // scrolled to it to get absolute distance from actual page top\n    top:\n      rect.top +\n      (document.documentElement.scrollTop || document.body.scrollTop),\n    left:\n      rect.left +\n      (document.documentElement.scrollLeft || document.body.scrollLeft),\n  };\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nexport function isHidden(el) {\n  return el.offsetParent === null;\n}\n\nexport function isElementInViewport(el) {\n  // Although straightforward: https://stackoverflow.com/a/7557433/6495043\n  var rect = el.getBoundingClientRect();\n\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <=\n      (window.innerHeight ||\n        document.documentElement.clientHeight) /*or $(window).height() */ &&\n    rect.right <=\n      (window.innerWidth ||\n        document.documentElement.clientWidth) /*or $(window).width() */\n  );\n}\n\nexport function getElementContentWidth(element) {\n  var styles = window.getComputedStyle(element);\n  var padding =\n    parseFloat(styles.paddingLeft) + parseFloat(styles.paddingRight);\n\n  return element.clientWidth - padding;\n}\n\nexport function bind(element, o) {\n  if (element) {\n    for (var event in o) {\n      var callback = o[event];\n\n      event.split(/\\s+/).forEach(function (event) {\n        element.addEventListener(event, callback);\n      });\n    }\n  }\n}\n\nexport function unbind(element, o) {\n  if (element) {\n    for (var event in o) {\n      var callback = o[event];\n\n      event.split(/\\s+/).forEach(function (event) {\n        element.removeEventListener(event, callback);\n      });\n    }\n  }\n}\n\nexport function fire(target, type, properties) {\n  var evt = document.createEvent(\"HTMLEvents\");\n\n  evt.initEvent(type, true, true);\n\n  for (var j in properties) {\n    evt[j] = properties[j];\n  }\n\n  return target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n  if (!nodeList) return;\n  for (var i = 0; i < nodeList.length; i++) {\n    callback.call(scope, nodeList[i], i);\n  }\n}\n\nexport function activate(\n  $parent,\n  $child,\n  commonClass,\n  activeClass = \"active\",\n  index = -1\n) {\n  let $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n  forEachNode($children, (node, i) => {\n    if (index >= 0 && i <= index) return;\n    node.classList.remove(activeClass);\n  });\n\n  $child.classList.add(activeClass);\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","export const ALL_CHART_TYPES = [\n  \"line\",\n  \"scatter\",\n  \"bar\",\n  \"percentage\",\n  \"heatmap\",\n  \"pie\",\n];\n\nexport const COMPATIBLE_CHARTS = {\n  bar: [\"line\", \"scatter\", \"percentage\", \"pie\"],\n  line: [\"scatter\", \"bar\", \"percentage\", \"pie\"],\n  pie: [\"line\", \"scatter\", \"percentage\", \"bar\"],\n  percentage: [\"bar\", \"line\", \"scatter\", \"pie\"],\n  heatmap: [],\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n  bar: \"datasets\",\n  line: \"datasets\",\n  pie: \"labels\",\n  percentage: \"labels\",\n  heatmap: HEATMAP_DISTRIBUTION_SIZE,\n};\n\nexport const BASE_MEASURES = {\n  margins: {\n    top: 10,\n    bottom: 10,\n    left: 20,\n    right: 20,\n  },\n  paddings: {\n    top: 20,\n    bottom: 40,\n    left: 30,\n    right: 10,\n  },\n\n  baseHeight: 240,\n  titleHeight: 20,\n  legendHeight: 30,\n\n  titleFontSize: 12,\n};\n\nexport function getTopOffset(m) {\n  return m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nexport function getLeftOffset(m) {\n  return m.margins.left + m.paddings.left;\n}\n\nexport function getExtraHeight(m) {\n  let totalExtraHeight =\n    m.margins.top +\n    m.margins.bottom +\n    m.paddings.top +\n    m.paddings.bottom +\n    m.titleHeight +\n    m.legendHeight;\n  return totalExtraHeight;\n}\n\nexport function getExtraWidth(m) {\n  let totalExtraWidth =\n    m.margins.left + m.margins.right + m.paddings.left + m.paddings.right;\n\n  return totalExtraWidth;\n}\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = \"line\";\nexport const AXIS_DATASET_CHART_TYPES = [\"line\", \"bar\"];\n\nexport const AXIS_LEGEND_BAR_SIZE = 100;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.0;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\nexport const PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\n\nconst DEFAULT_CHART_COLORS = [\n  \"light-blue\",\n  \"blue\",\n  \"violet\",\n  \"red\",\n  \"orange\",\n  \"yellow\",\n  \"green\",\n  \"light-green\",\n  \"purple\",\n  \"magenta\",\n  \"light-grey\",\n  \"dark-grey\",\n];\nconst HEATMAP_COLORS_GREEN = [\n  \"#ebedf0\",\n  \"#c6e48b\",\n  \"#7bc96f\",\n  \"#239a3b\",\n  \"#196127\",\n];\nexport const HEATMAP_COLORS_BLUE = [\n  \"#ebedf0\",\n  \"#c0ddf9\",\n  \"#73b3f3\",\n  \"#3886e1\",\n  \"#17459e\",\n];\nexport const HEATMAP_COLORS_YELLOW = [\n  \"#ebedf0\",\n  \"#fdf436\",\n  \"#ffc700\",\n  \"#ff9100\",\n  \"#06001c\",\n];\n\nexport const DEFAULT_COLORS = {\n  bar: DEFAULT_CHART_COLORS,\n  line: DEFAULT_CHART_COLORS,\n  pie: DEFAULT_CHART_COLORS,\n  percentage: DEFAULT_CHART_COLORS,\n  heatmap: HEATMAP_COLORS_GREEN,\n  donut: DEFAULT_CHART_COLORS,\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n","import { $ } from \"../utils/dom\";\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from \"../utils/constants\";\n\nexport default class SvgTip {\n  constructor({ parent = null, colors = [] }) {\n    this.parent = parent;\n    this.colors = colors;\n    this.titleName = \"\";\n    this.titleValue = \"\";\n    this.listValues = [];\n    this.titleValueFirst = 0;\n\n    this.x = 0;\n    this.y = 0;\n\n    this.top = 0;\n    this.left = 0;\n\n    this.setup();\n  }\n\n  setup() {\n    this.makeTooltip();\n  }\n\n  refresh() {\n    this.fill();\n    this.calcPosition();\n  }\n\n  makeTooltip() {\n    this.container = $.create(\"div\", {\n      inside: this.parent,\n      className: \"graph-svg-tip comparison\",\n      innerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`,\n    });\n    this.hideTip();\n\n    this.title = this.container.querySelector(\".title\");\n    this.dataPointList = this.container.querySelector(\".data-point-list\");\n\n    this.parent.addEventListener(\"mouseleave\", () => {\n      this.hideTip();\n    });\n  }\n\n  fill() {\n    let title;\n    if (this.index) {\n      this.container.setAttribute(\"data-point-index\", this.index);\n    }\n    if (this.titleValueFirst) {\n      title = `<strong>${this.titleValue}</strong>${this.titleName}`;\n    } else {\n      title = `${this.titleName}<strong>${this.titleValue}</strong>`;\n    }\n    this.title.innerHTML = title;\n    this.dataPointList.innerHTML = \"\";\n\n    this.listValues.map((set, i) => {\n      const color = this.colors[i] || \"black\";\n      let value =\n        set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\n      let li = $.create(\"li\", {\n        styles: {\n          \"border-top\": `3px solid ${color}`,\n        },\n        innerHTML: `<strong style=\"display: block;\">${\n          value === 0 || value ? value : \"\"\n        }</strong>\n\t\t\t\t\t${set.title ? set.title : \"\"}`,\n      });\n\n      this.dataPointList.appendChild(li);\n    });\n  }\n\n  calcPosition() {\n    let width = this.container.offsetWidth;\n\n    this.top =\n      this.y - this.container.offsetHeight - TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n    this.left = this.x - width / 2;\n    let maxLeft = this.parent.offsetWidth - width;\n\n    let pointer = this.container.querySelector(\".svg-pointer\");\n\n    if (this.left < 0) {\n      pointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n      this.left = 0;\n    } else if (this.left > maxLeft) {\n      let delta = this.left - maxLeft;\n      let pointerOffset = `calc(50% + ${delta}px)`;\n      pointer.style.left = pointerOffset;\n\n      this.left = maxLeft;\n    } else {\n      pointer.style.left = `50%`;\n    }\n  }\n\n  setValues(x, y, title = {}, listValues = [], index = -1) {\n    this.titleName = title.name;\n    this.titleValue = title.value;\n    this.listValues = listValues;\n    this.x = x;\n    this.y = y;\n    this.titleValueFirst = title.valueFirst || 0;\n    this.index = index;\n    this.refresh();\n  }\n\n  hideTip() {\n    this.container.style.top = \"0px\";\n    this.container.style.left = \"0px\";\n    this.container.style.opacity = \"0\";\n  }\n\n  showTip() {\n    this.container.style.top = this.top + \"px\";\n    this.container.style.left = this.left + \"px\";\n    this.container.style.opacity = \"1\";\n  }\n}\n","import { ANGLE_RATIO } from \"./constants\";\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n  return parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) return false;\n  let areEqual = true;\n  arr1.map((d, i) => {\n    if (arr2[i] !== d) areEqual = false;\n  });\n  return areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n  // Awesomeness: https://bost.ocks.org/mike/shuffle/\n  // https://stackoverflow.com/a/2450976/6495043\n  // https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start = false) {\n  if (!element) {\n    element = start ? array[0] : array[array.length - 1];\n  }\n  let fillerArray = new Array(Math.abs(count)).fill(element);\n  array = start ? fillerArray.concat(array) : array.concat(fillerArray);\n  return array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n  return (string + \"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n  return new Proxy(obj, {\n    set: function (target, prop, value) {\n      setFn();\n      return Reflect.set(target, prop, value);\n    },\n    get: function (target, prop) {\n      getFn();\n      return Reflect.get(target, prop);\n    },\n  });\n}\n\n// https://stackoverflow.com/a/29325222\nexport function getRandomBias(min, max, bias, influence) {\n  const range = max - min;\n  const biasValue = range * bias + min;\n  var rnd = Math.random() * range + min, // random in range\n    mix = Math.random() * influence; // random mixer\n  return rnd * (1 - mix) + biasValue * mix; // mix full range and bias\n}\n\nexport function getPositionByAngle(angle, radius) {\n  return {\n    x: Math.sin(angle * ANGLE_RATIO) * radius,\n    y: Math.cos(angle * ANGLE_RATIO) * radius,\n  };\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nexport function isValidNumber(candidate, nonNegative = false) {\n  if (Number.isNaN(candidate)) return false;\n  else if (candidate === undefined) return false;\n  else if (!Number.isFinite(candidate)) return false;\n  else if (nonNegative && candidate < 0) return false;\n  else return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nexport function round(d) {\n  // https://floating-point-gui.de/\n  // https://www.jacklmoore.com/notes/rounding-in-javascript/\n  return Number(Math.round(d + \"e4\") + \"e-4\");\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\nexport function deepClone(candidate) {\n  let cloned, value, key;\n\n  if (candidate instanceof Date) {\n    return new Date(candidate.getTime());\n  }\n\n  if (typeof candidate !== \"object\" || candidate === null) {\n    return candidate;\n  }\n\n  cloned = Array.isArray(candidate) ? [] : {};\n\n  for (key in candidate) {\n    value = candidate[key];\n\n    cloned[key] = deepClone(value);\n  }\n\n  return cloned;\n}\n","import { fillArray } from \"./helpers\";\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n  let height, y;\n  if (yTop <= zeroLine) {\n    height = zeroLine - yTop;\n    y = yTop;\n  } else {\n    height = yTop - zeroLine;\n    y = zeroLine;\n  }\n\n  return [height, y];\n}\n\nexport function equilizeNoOfElements(\n  array1,\n  array2,\n  extraCount = array2.length - array1.length\n) {\n  // Doesn't work if either has zero elements.\n  if (extraCount > 0) {\n    array1 = fillArray(array1, extraCount);\n  } else {\n    array2 = fillArray(array2, extraCount);\n  }\n  return [array1, array2];\n}\n\nexport function truncateString(txt, len) {\n  if (!txt) {\n    return;\n  }\n  if (txt.length > len) {\n    return txt.slice(0, len - 3) + \"...\";\n  } else {\n    return txt;\n  }\n}\n\nexport function shortenLargeNumber(label) {\n  let number;\n  if (typeof label === \"number\") number = label;\n  else if (typeof label === \"string\") {\n    number = Number(label);\n    if (Number.isNaN(number)) return label;\n  }\n\n  // Using absolute since log wont work for negative numbers\n  let p = Math.floor(Math.log10(Math.abs(number)));\n  if (p <= 2) return number; // Return as is for a 3 digit number of less\n  let l = Math.floor(p / 3);\n  let shortened =\n    Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1);\n\n  // Correct for floating point error upto 2 decimal places\n  return Math.round(shortened * 100) / 100 + \" \" + [\"\", \"K\", \"M\", \"B\", \"T\"][l];\n}\n\n// cubic bezier curve calculation (from example by François Romain)\nexport function getSplineCurvePointsStr(xList, yList) {\n  let points = [];\n  for (let i = 0; i < xList.length; i++) {\n    points.push([xList[i], yList[i]]);\n  }\n\n  let smoothing = 0.2;\n  let line = (pointA, pointB) => {\n    let lengthX = pointB[0] - pointA[0];\n    let lengthY = pointB[1] - pointA[1];\n    return {\n      length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n      angle: Math.atan2(lengthY, lengthX),\n    };\n  };\n\n  let controlPoint = (current, previous, next, reverse) => {\n    let p = previous || current;\n    let n = next || current;\n    let o = line(p, n);\n    let angle = o.angle + (reverse ? Math.PI : 0);\n    let length = o.length * smoothing;\n    let x = current[0] + Math.cos(angle) * length;\n    let y = current[1] + Math.sin(angle) * length;\n    return [x, y];\n  };\n\n  let bezierCommand = (point, i, a) => {\n    let cps = controlPoint(a[i - 1], a[i - 2], point);\n    let cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n    return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n  };\n\n  let pointStr = (points, command) => {\n    return points.reduce(\n      (acc, point, i, a) =>\n        i === 0 ? `${point[0]},${point[1]}` : `${acc} ${command(point, i, a)}`,\n      \"\"\n    );\n  };\n\n  return pointStr(points, bezierCommand);\n}\n","const PRESET_COLOR_MAP = {\n  \"light-blue\": \"#7cd6fd\",\n  blue: \"#5e64ff\",\n  violet: \"#743ee2\",\n  red: \"#ff5858\",\n  orange: \"#ffa00a\",\n  yellow: \"#feef72\",\n  green: \"#28a745\",\n  \"light-green\": \"#98d85b\",\n  purple: \"#b554ff\",\n  magenta: \"#ffa3ef\",\n  black: \"#36114C\",\n  grey: \"#bdd3e6\",\n  \"light-grey\": \"#f0f4f7\",\n  \"dark-grey\": \"#b8c2cc\",\n};\n\nfunction limitColor(r) {\n  if (r > 255) return 255;\n  else if (r < 0) return 0;\n  return r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n  let col = getColor(color);\n  let usePound = false;\n  if (col[0] == \"#\") {\n    col = col.slice(1);\n    usePound = true;\n  }\n  let num = parseInt(col, 16);\n  let r = limitColor((num >> 16) + amt);\n  let b = limitColor(((num >> 8) & 0x00ff) + amt);\n  let g = limitColor((num & 0x0000ff) + amt);\n  return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n  // https://stackoverflow.com/a/32685393\n  let HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n  let RGB_RE =\n    /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n  return HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nexport const getColor = (color) => {\n  // When RGB color, convert to hexadecimal (alpha value is omitted)\n  if (/rgb[a]{0,1}\\([\\d, ]+\\)/gim.test(color)) {\n    return /\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim\n      .exec(color)\n      .map((x, i) => (i !== 0 ? Number(x).toString(16) : \"#\"))\n      .reduce((c, ch) => `${c}${ch}`);\n  }\n  return PRESET_COLOR_MAP[color] || color;\n};\n","import {\n  getBarHeightAndYAttr,\n  truncateString,\n  shortenLargeNumber,\n  getSplineCurvePointsStr,\n} from \"./draw-utils\";\nimport { getStringWidth, isValidNumber } from \"./helpers\";\nimport {\n  DOT_OVERLAY_SIZE_INCR,\n  PERCENTAGE_BAR_DEFAULT_DEPTH,\n} from \"./constants\";\nimport { lightenDarkenColor } from \"./colors\";\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 15;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = \"#dadada\";\nconst FONT_FILL = \"#555b51\";\n\nfunction $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, o) {\n  var element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n  for (var i in o) {\n    var val = o[i];\n\n    if (i === \"inside\") {\n      $(val).appendChild(element);\n    } else if (i === \"around\") {\n      var ref = $(val);\n      ref.parentNode.insertBefore(element, ref);\n      element.appendChild(ref);\n    } else if (i === \"styles\") {\n      if (typeof val === \"object\") {\n        Object.keys(val).map((prop) => {\n          element.style[prop] = val[prop];\n        });\n      }\n    } else {\n      if (i === \"className\") {\n        i = \"class\";\n      }\n      if (i === \"innerHTML\") {\n        element[\"textContent\"] = val;\n      } else {\n        element.setAttribute(i, val);\n      }\n    }\n  }\n\n  return element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n  return createSVG(\"linearGradient\", {\n    inside: svgDefElem,\n    id: gradientId,\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 1,\n  });\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n  return createSVG(\"stop\", {\n    inside: gradElem,\n    style: `stop-color: ${color}`,\n    offset: offset,\n    \"stop-opacity\": opacity,\n  });\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n  return createSVG(\"svg\", {\n    className: className,\n    inside: parent,\n    width: width,\n    height: height,\n  });\n}\n\nexport function makeSVGDefs(svgContainer) {\n  return createSVG(\"defs\", {\n    inside: svgContainer,\n  });\n}\n\nexport function makeSVGGroup(className, transform = \"\", parent = undefined) {\n  let args = {\n    className: className,\n    transform: transform,\n  };\n  if (parent) args.inside = parent;\n  return createSVG(\"g\", args);\n}\n\nexport function wrapInSVGGroup(elements, className = \"\") {\n  let g = createSVG(\"g\", {\n    className: className,\n  });\n  elements.forEach((e) => g.appendChild(e));\n  return g;\n}\n\nexport function makePath(\n  pathStr,\n  className = \"\",\n  stroke = \"none\",\n  fill = \"none\",\n  strokeWidth = 2\n) {\n  return createSVG(\"path\", {\n    className: className,\n    d: pathStr,\n    styles: {\n      stroke: stroke,\n      fill: fill,\n      \"stroke-width\": strokeWidth,\n    },\n  });\n}\n\nexport function makeArcPathStr(\n  startPosition,\n  endPosition,\n  center,\n  radius,\n  clockWise = 1,\n  largeArc = 0\n) {\n  let [arcStartX, arcStartY] = [\n    center.x + startPosition.x,\n    center.y + startPosition.y,\n  ];\n  let [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n  return `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeCircleStr(\n  startPosition,\n  endPosition,\n  center,\n  radius,\n  clockWise = 1,\n  largeArc = 0\n) {\n  let [arcStartX, arcStartY] = [\n    center.x + startPosition.x,\n    center.y + startPosition.y,\n  ];\n  let [arcEndX, midArc, arcEndY] = [\n    center.x + endPosition.x,\n    center.y * 2,\n    center.y + endPosition.y,\n  ];\n  return `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeArcStrokePathStr(\n  startPosition,\n  endPosition,\n  center,\n  radius,\n  clockWise = 1,\n  largeArc = 0\n) {\n  let [arcStartX, arcStartY] = [\n    center.x + startPosition.x,\n    center.y + startPosition.y,\n  ];\n  let [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n  return `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeStrokeCircleStr(\n  startPosition,\n  endPosition,\n  center,\n  radius,\n  clockWise = 1,\n  largeArc = 0\n) {\n  let [arcStartX, arcStartY] = [\n    center.x + startPosition.x,\n    center.y + startPosition.y,\n  ];\n  let [arcEndX, midArc, arcEndY] = [\n    center.x + endPosition.x,\n    radius * 2 + arcStartY,\n    center.y + startPosition.y,\n  ];\n\n  return `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n  let gradientId =\n    \"path-fill-gradient\" +\n    \"-\" +\n    color +\n    \"-\" +\n    (lighter ? \"lighter\" : \"default\");\n  let gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n  let opacities = [1, 0.6, 0.2];\n  if (lighter) {\n    opacities = [0.4, 0.2, 0];\n  }\n\n  setGradientStop(gradientDef, \"0%\", color, opacities[0]);\n  setGradientStop(gradientDef, \"50%\", color, opacities[1]);\n  setGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n  return gradientId;\n}\n\nexport function percentageBar(\n  x,\n  y,\n  width,\n  height,\n  depth = PERCENTAGE_BAR_DEFAULT_DEPTH,\n  fill = \"none\"\n) {\n  let args = {\n    className: \"percentage-bar\",\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    fill: fill,\n    styles: {\n      stroke: lightenDarkenColor(fill, -25),\n      // Diabolically good: https://stackoverflow.com/a/9000859\n      // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n      \"stroke-dasharray\": `0, ${height + width}, ${width}, ${height}`,\n      \"stroke-width\": depth,\n    },\n  };\n\n  return createSVG(\"rect\", args);\n}\n\nexport function heatSquare(\n  className,\n  x,\n  y,\n  size,\n  radius,\n  fill = \"none\",\n  data = {}\n) {\n  let args = {\n    className: className,\n    x: x,\n    y: y,\n    width: size,\n    height: size,\n    rx: radius,\n    fill: fill,\n  };\n\n  Object.keys(data).map((key) => {\n    args[key] = data[key];\n  });\n\n  return createSVG(\"rect\", args);\n}\n\nexport function legendBar(x, y, size, fill = \"none\", label, truncate = false) {\n  label = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n  let args = {\n    className: \"legend-bar\",\n    x: 0,\n    y: 0,\n    width: size,\n    height: \"2px\",\n    fill: fill,\n  };\n  let text = createSVG(\"text\", {\n    className: \"legend-dataset-text\",\n    x: 0,\n    y: 0,\n    dy: FONT_SIZE * 2 + \"px\",\n    \"font-size\": FONT_SIZE * 1.2 + \"px\",\n    \"text-anchor\": \"start\",\n    fill: FONT_FILL,\n    innerHTML: label,\n  });\n\n  let group = createSVG(\"g\", {\n    transform: `translate(${x}, ${y})`,\n  });\n  group.appendChild(createSVG(\"rect\", args));\n  group.appendChild(text);\n\n  return group;\n}\n\nexport function legendDot(x, y, size, fill = \"none\", label, truncate = false) {\n  label = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n  let args = {\n    className: \"legend-dot\",\n    cx: 0,\n    cy: 0,\n    r: size,\n    fill: fill,\n  };\n  let text = createSVG(\"text\", {\n    className: \"legend-dataset-text\",\n    x: 0,\n    y: 0,\n    dx: FONT_SIZE + \"px\",\n    dy: FONT_SIZE / 3 + \"px\",\n    \"font-size\": FONT_SIZE * 1.2 + \"px\",\n    \"text-anchor\": \"start\",\n    fill: FONT_FILL,\n    innerHTML: label,\n  });\n\n  let group = createSVG(\"g\", {\n    transform: `translate(${x}, ${y})`,\n  });\n  group.appendChild(createSVG(\"circle\", args));\n  group.appendChild(text);\n\n  return group;\n}\n\nexport function makeText(className, x, y, content, options = {}) {\n  let fontSize = options.fontSize || FONT_SIZE;\n  let dy = options.dy !== undefined ? options.dy : fontSize / 2;\n  let fill = options.fill || FONT_FILL;\n  let textAnchor = options.textAnchor || \"start\";\n  return createSVG(\"text\", {\n    className: className,\n    x: x,\n    y: y,\n    dy: dy + \"px\",\n    \"font-size\": fontSize + \"px\",\n    fill: fill,\n    \"text-anchor\": textAnchor,\n    innerHTML: content,\n  });\n}\n\nfunction makeVertLine(x, label, y1, y2, options = {}) {\n  if (!options.stroke) options.stroke = BASE_LINE_COLOR;\n  let l = createSVG(\"line\", {\n    className: \"line-vertical \" + options.className,\n    x1: 0,\n    x2: 0,\n    y1: y1,\n    y2: y2,\n    styles: {\n      stroke: options.stroke,\n    },\n  });\n\n  let text = createSVG(\"text\", {\n    x: 0,\n    y: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n    dy: FONT_SIZE + \"px\",\n    \"font-size\": FONT_SIZE + \"px\",\n    \"text-anchor\": \"middle\",\n    innerHTML: label + \"\",\n  });\n\n  let line = createSVG(\"g\", {\n    transform: `translate(${x}, 0)`,\n  });\n\n  line.appendChild(l);\n  line.appendChild(text);\n\n  return line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options = {}) {\n  if (!options.stroke) options.stroke = BASE_LINE_COLOR;\n  if (!options.lineType) options.lineType = \"\";\n  if (options.shortenNumbers) label = shortenLargeNumber(label);\n\n  let className =\n    \"line-horizontal \" +\n    options.className +\n    (options.lineType === \"dashed\" ? \"dashed\" : \"\");\n\n  let l = createSVG(\"line\", {\n    className: className,\n    x1: x1,\n    x2: x2,\n    y1: 0,\n    y2: 0,\n    styles: {\n      stroke: options.stroke,\n    },\n  });\n\n  let text = createSVG(\"text\", {\n    x: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n    y: 0,\n    dy: FONT_SIZE / 2 - 2 + \"px\",\n    \"font-size\": FONT_SIZE + \"px\",\n    \"text-anchor\": x1 < x2 ? \"end\" : \"start\",\n    innerHTML: label + \"\",\n  });\n\n  let line = createSVG(\"g\", {\n    transform: `translate(0, ${y})`,\n    \"stroke-opacity\": 1,\n  });\n\n  if (text === 0 || text === \"0\") {\n    line.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n  }\n\n  line.appendChild(l);\n  line.appendChild(text);\n\n  return line;\n}\n\nexport function yLine(y, label, width, options = {}) {\n  if (!isValidNumber(y)) y = 0;\n\n  if (!options.pos) options.pos = \"left\";\n  if (!options.offset) options.offset = 0;\n  if (!options.mode) options.mode = \"span\";\n  if (!options.stroke) options.stroke = BASE_LINE_COLOR;\n  if (!options.className) options.className = \"\";\n\n  let x1 = -1 * AXIS_TICK_LENGTH;\n  let x2 = options.mode === \"span\" ? width + AXIS_TICK_LENGTH : 0;\n\n  if (options.mode === \"tick\" && options.pos === \"right\") {\n    x1 = width + AXIS_TICK_LENGTH;\n    x2 = width;\n  }\n\n  // let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n  x1 += options.offset;\n  x2 += options.offset;\n\n  return makeHoriLine(y, label, x1, x2, {\n    stroke: options.stroke,\n    className: options.className,\n    lineType: options.lineType,\n    shortenNumbers: options.shortenNumbers,\n  });\n}\n\nexport function xLine(x, label, height, options = {}) {\n  if (!isValidNumber(x)) x = 0;\n\n  if (!options.pos) options.pos = \"bottom\";\n  if (!options.offset) options.offset = 0;\n  if (!options.mode) options.mode = \"span\";\n  if (!options.stroke) options.stroke = BASE_LINE_COLOR;\n  if (!options.className) options.className = \"\";\n\n  // Draw X axis line in span/tick mode with optional label\n  //                        \ty2(span)\n  // \t\t\t\t\t\t|\n  // \t\t\t\t\t\t|\n  //\t\t\t\tx line\t|\n  //\t\t\t\t\t\t|\n  // \t\t\t\t\t   \t|\n  // ---------------------+-- y2(tick)\n  //\t\t\t\t\t\t|\n  //\t\t\t\t\t\t\ty1\n\n  let y1 = height + AXIS_TICK_LENGTH;\n  let y2 = options.mode === \"span\" ? -1 * AXIS_TICK_LENGTH : height;\n\n  if (options.mode === \"tick\" && options.pos === \"top\") {\n    // top axis ticks\n    y1 = -1 * AXIS_TICK_LENGTH;\n    y2 = 0;\n  }\n\n  return makeVertLine(x, label, y1, y2, {\n    stroke: options.stroke,\n    className: options.className,\n    lineType: options.lineType,\n  });\n}\n\nexport function yMarker(y, label, width, options = {}) {\n  if (!options.labelPos) options.labelPos = \"right\";\n  let x =\n    options.labelPos === \"left\"\n      ? LABEL_MARGIN\n      : width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n  let labelSvg = createSVG(\"text\", {\n    className: \"chart-label\",\n    x: x,\n    y: 0,\n    dy: FONT_SIZE / -2 + \"px\",\n    \"font-size\": FONT_SIZE + \"px\",\n    \"text-anchor\": \"start\",\n    innerHTML: label + \"\",\n  });\n\n  let line = makeHoriLine(y, \"\", 0, width, {\n    stroke: options.stroke || BASE_LINE_COLOR,\n    className: options.className || \"\",\n    lineType: options.lineType,\n  });\n\n  line.appendChild(labelSvg);\n\n  return line;\n}\n\nexport function yRegion(y1, y2, width, label, options = {}) {\n  // return a group\n  let height = y1 - y2;\n\n  let rect = createSVG(\"rect\", {\n    className: `bar mini`, // remove class\n    styles: {\n      fill: `rgba(228, 234, 239, 0.49)`,\n      stroke: BASE_LINE_COLOR,\n      \"stroke-dasharray\": `${width}, ${height}`,\n    },\n    // 'data-point-index': index,\n    x: 0,\n    y: 0,\n    width: width,\n    height: height,\n  });\n\n  if (!options.labelPos) options.labelPos = \"right\";\n  let x =\n    options.labelPos === \"left\"\n      ? LABEL_MARGIN\n      : width - getStringWidth(label + \"\", 4.5) - LABEL_MARGIN;\n\n  let labelSvg = createSVG(\"text\", {\n    className: \"chart-label\",\n    x: x,\n    y: 0,\n    dy: FONT_SIZE / -2 + \"px\",\n    \"font-size\": FONT_SIZE + \"px\",\n    \"text-anchor\": \"start\",\n    innerHTML: label + \"\",\n  });\n\n  let region = createSVG(\"g\", {\n    transform: `translate(0, ${y2})`,\n  });\n\n  region.appendChild(rect);\n  region.appendChild(labelSvg);\n\n  return region;\n}\n\nexport function datasetBar(\n  x,\n  yTop,\n  width,\n  color,\n  label = \"\",\n  index = 0,\n  offset = 0,\n  meta = {}\n) {\n  let [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n  y -= offset;\n\n  if (height === 0) {\n    height = meta.minHeight;\n    y -= meta.minHeight;\n  }\n\n  // Preprocess numbers to avoid svg building errors\n  if (!isValidNumber(x)) x = 0;\n  if (!isValidNumber(y)) y = 0;\n  if (!isValidNumber(height, true)) height = 0;\n  if (!isValidNumber(width, true)) width = 0;\n\n  let rect = createSVG(\"rect\", {\n    className: `bar mini`,\n    style: `fill: ${color}`,\n    \"data-point-index\": index,\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n  });\n\n  label += \"\";\n\n  if (!label && !label.length) {\n    return rect;\n  } else {\n    rect.setAttribute(\"y\", 0);\n    rect.setAttribute(\"x\", 0);\n    let text = createSVG(\"text\", {\n      className: \"data-point-value\",\n      x: width / 2,\n      y: 0,\n      dy: (FONT_SIZE / 2) * -1 + \"px\",\n      \"font-size\": FONT_SIZE + \"px\",\n      \"text-anchor\": \"middle\",\n      innerHTML: label,\n    });\n\n    let group = createSVG(\"g\", {\n      \"data-point-index\": index,\n      transform: `translate(${x}, ${y})`,\n    });\n    group.appendChild(rect);\n    group.appendChild(text);\n\n    return group;\n  }\n}\n\nexport function datasetDot(x, y, radius, color, label = \"\", index = 0) {\n  let dot = createSVG(\"circle\", {\n    style: `fill: ${color}`,\n    \"data-point-index\": index,\n    cx: x,\n    cy: y,\n    r: radius,\n  });\n\n  label += \"\";\n\n  if (!label && !label.length) {\n    return dot;\n  } else {\n    dot.setAttribute(\"cy\", 0);\n    dot.setAttribute(\"cx\", 0);\n\n    let text = createSVG(\"text\", {\n      className: \"data-point-value\",\n      x: 0,\n      y: 0,\n      dy: (FONT_SIZE / 2) * -1 - radius + \"px\",\n      \"font-size\": FONT_SIZE + \"px\",\n      \"text-anchor\": \"middle\",\n      innerHTML: label,\n    });\n\n    let group = createSVG(\"g\", {\n      \"data-point-index\": index,\n      transform: `translate(${x}, ${y})`,\n    });\n    group.appendChild(dot);\n    group.appendChild(text);\n\n    return group;\n  }\n}\n\nexport function getPaths(xList, yList, color, options = {}, meta = {}) {\n  let pointsList = yList.map((y, i) => xList[i] + \",\" + y);\n  let pointsStr = pointsList.join(\"L\");\n\n  // Spline\n  if (options.spline) pointsStr = getSplineCurvePointsStr(xList, yList);\n\n  let path = makePath(\"M\" + pointsStr, \"line-graph-path\", color);\n\n  // HeatLine\n  if (options.heatline) {\n    let gradient_id = makeGradient(meta.svgDefs, color);\n    path.style.stroke = `url(#${gradient_id})`;\n  }\n\n  let paths = {\n    path: path,\n  };\n\n  // Region\n  if (options.regionFill) {\n    let gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n    let pathStr =\n      \"M\" +\n      `${xList[0]},${meta.zeroLine}L` +\n      pointsStr +\n      `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n    paths.region = makePath(\n      pathStr,\n      `region-fill`,\n      \"none\",\n      `url(#${gradient_id_region})`\n    );\n  }\n\n  return paths;\n}\n\nexport let makeOverlay = {\n  bar: (unit) => {\n    let transformValue;\n    if (unit.nodeName !== \"rect\") {\n      transformValue = unit.getAttribute(\"transform\");\n      unit = unit.childNodes[0];\n    }\n    let overlay = unit.cloneNode();\n    overlay.style.fill = \"#000000\";\n    overlay.style.opacity = \"0.4\";\n\n    if (transformValue) {\n      overlay.setAttribute(\"transform\", transformValue);\n    }\n    return overlay;\n  },\n\n  dot: (unit) => {\n    let transformValue;\n    if (unit.nodeName !== \"circle\") {\n      transformValue = unit.getAttribute(\"transform\");\n      unit = unit.childNodes[0];\n    }\n    let overlay = unit.cloneNode();\n    let radius = unit.getAttribute(\"r\");\n    let fill = unit.getAttribute(\"fill\");\n    overlay.setAttribute(\"r\", parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n    overlay.setAttribute(\"fill\", fill);\n    overlay.style.opacity = \"0.6\";\n\n    if (transformValue) {\n      overlay.setAttribute(\"transform\", transformValue);\n    }\n    return overlay;\n  },\n\n  heat_square: (unit) => {\n    let transformValue;\n    if (unit.nodeName !== \"circle\") {\n      transformValue = unit.getAttribute(\"transform\");\n      unit = unit.childNodes[0];\n    }\n    let overlay = unit.cloneNode();\n    let radius = unit.getAttribute(\"r\");\n    let fill = unit.getAttribute(\"fill\");\n    overlay.setAttribute(\"r\", parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n    overlay.setAttribute(\"fill\", fill);\n    overlay.style.opacity = \"0.6\";\n\n    if (transformValue) {\n      overlay.setAttribute(\"transform\", transformValue);\n    }\n    return overlay;\n  },\n};\n\nexport let updateOverlay = {\n  bar: (unit, overlay) => {\n    let transformValue;\n    if (unit.nodeName !== \"rect\") {\n      transformValue = unit.getAttribute(\"transform\");\n      unit = unit.childNodes[0];\n    }\n    let attributes = [\"x\", \"y\", \"width\", \"height\"];\n    Object.values(unit.attributes)\n      .filter((attr) => attributes.includes(attr.name) && attr.specified)\n      .map((attr) => {\n        overlay.setAttribute(attr.name, attr.nodeValue);\n      });\n\n    if (transformValue) {\n      overlay.setAttribute(\"transform\", transformValue);\n    }\n  },\n\n  dot: (unit, overlay) => {\n    let transformValue;\n    if (unit.nodeName !== \"circle\") {\n      transformValue = unit.getAttribute(\"transform\");\n      unit = unit.childNodes[0];\n    }\n    let attributes = [\"cx\", \"cy\"];\n    Object.values(unit.attributes)\n      .filter((attr) => attributes.includes(attr.name) && attr.specified)\n      .map((attr) => {\n        overlay.setAttribute(attr.name, attr.nodeValue);\n      });\n\n    if (transformValue) {\n      overlay.setAttribute(\"transform\", transformValue);\n    }\n  },\n\n  heat_square: (unit, overlay) => {\n    let transformValue;\n    if (unit.nodeName !== \"circle\") {\n      transformValue = unit.getAttribute(\"transform\");\n      unit = unit.childNodes[0];\n    }\n    let attributes = [\"cx\", \"cy\"];\n    Object.values(unit.attributes)\n      .filter((attr) => attributes.includes(attr.name) && attr.specified)\n      .map((attr) => {\n        overlay.setAttribute(attr.name, attr.nodeValue);\n      });\n\n    if (transformValue) {\n      overlay.setAttribute(\"transform\", transformValue);\n    }\n  },\n};\n","import { getBarHeightAndYAttr, getSplineCurvePointsStr } from \"./draw-utils\";\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = \"easein\";\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n  let old = typeof oldCoord === \"string\" ? oldCoord : oldCoord.join(\", \");\n  return [\n    unit,\n    { transform: newCoord.join(\", \") },\n    duration,\n    STD_EASING,\n    \"translate\",\n    { transform: old },\n  ];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n  return translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n  return translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n  let newHeight = newY1 - newY2;\n  let rect = rectGroup.childNodes[0];\n  let width = rect.getAttribute(\"width\");\n  let rectAnim = [\n    rect,\n    { height: newHeight, \"stroke-dasharray\": `${width}, ${newHeight}` },\n    MARKER_LINE_ANIM_DUR,\n    STD_EASING,\n  ];\n\n  let groupAnim = translate(\n    rectGroup,\n    [0, oldY2],\n    [0, newY2],\n    MARKER_LINE_ANIM_DUR\n  );\n  return [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset = 0, meta = {}) {\n  let [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n  y -= offset;\n  if (bar.nodeName !== \"rect\") {\n    let rect = bar.childNodes[0];\n    let rectAnim = [\n      rect,\n      { width: width, height: height },\n      UNIT_ANIM_DUR,\n      STD_EASING,\n    ];\n\n    let oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n    let groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n    return [rectAnim, groupAnim];\n  } else {\n    return [\n      [\n        bar,\n        { width: width, height: height, x: x, y: y },\n        UNIT_ANIM_DUR,\n        STD_EASING,\n      ],\n    ];\n  }\n  // bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n  if (dot.nodeName !== \"circle\") {\n    let oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n    let groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n    return [groupAnim];\n  } else {\n    return [[dot, { cx: x, cy: y }, UNIT_ANIM_DUR, STD_EASING]];\n  }\n  // dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine, spline) {\n  let pathComponents = [];\n  let pointsStr = newYList.map((y, i) => newXList[i] + \",\" + y).join(\"L\");\n\n  if (spline) pointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n  const animPath = [\n    paths.path,\n    { d: \"M\" + pointsStr },\n    PATH_ANIM_DUR,\n    STD_EASING,\n  ];\n  pathComponents.push(animPath);\n\n  if (paths.region) {\n    let regStartPt = `${newXList[0]},${zeroLine}L`;\n    let regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n    const animRegion = [\n      paths.region,\n      { d: \"M\" + regStartPt + pointsStr + regEndPt },\n      PATH_ANIM_DUR,\n      STD_EASING,\n    ];\n    pathComponents.push(animRegion);\n  }\n\n  return pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n  return [oldPath, { d: pathStr }, UNIT_ANIM_DUR, STD_EASING];\n}\n","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from \"./animate\";\n\nconst EASING = {\n  ease: \"0.25 0.1 0.25 1\",\n  linear: \"0 0 1 1\",\n  // easein: \"0.42 0 1 1\",\n  easein: \"0.1 0.8 0.2 1\",\n  easeout: \"0 0 0.58 1\",\n  easeinout: \"0.42 0 0.58 1\",\n};\n\nfunction animateSVGElement(\n  element,\n  props,\n  dur,\n  easingType = \"linear\",\n  type = undefined,\n  oldValues = {}\n) {\n  let animElement = element.cloneNode(true);\n  let newElement = element.cloneNode(true);\n\n  for (var attributeName in props) {\n    let animateElement;\n    if (attributeName === \"transform\") {\n      animateElement = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"animateTransform\"\n      );\n    } else {\n      animateElement = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"animate\"\n      );\n    }\n    let currentValue =\n      oldValues[attributeName] || element.getAttribute(attributeName);\n    let value = props[attributeName];\n\n    let animAttr = {\n      attributeName: attributeName,\n      from: currentValue,\n      to: value,\n      begin: \"0s\",\n      dur: dur / 1000 + \"s\",\n      values: currentValue + \";\" + value,\n      keySplines: EASING[easingType],\n      keyTimes: \"0;1\",\n      calcMode: \"spline\",\n      fill: \"freeze\",\n    };\n\n    if (type) {\n      animAttr[\"type\"] = type;\n    }\n\n    for (var i in animAttr) {\n      animateElement.setAttribute(i, animAttr[i]);\n    }\n\n    animElement.appendChild(animateElement);\n\n    if (type) {\n      newElement.setAttribute(attributeName, `translate(${value})`);\n    } else {\n      newElement.setAttribute(attributeName, value);\n    }\n  }\n\n  return [animElement, newElement];\n}\n\nexport function transform(element, style) {\n  // eslint-disable-line no-unused-vars\n  element.style.transform = style;\n  element.style.webkitTransform = style;\n  element.style.msTransform = style;\n  element.style.mozTransform = style;\n  element.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n  let newElements = [];\n  let animElements = [];\n\n  elements.map((element) => {\n    let unit = element[0];\n    let parent = unit.parentNode;\n\n    let animElement, newElement;\n\n    element[0] = unit;\n    [animElement, newElement] = animateSVGElement(...element);\n\n    newElements.push(newElement);\n    animElements.push([animElement, parent]);\n\n    if (parent) {\n      parent.replaceChild(animElement, unit);\n    }\n  });\n\n  let animSvg = svgContainer.cloneNode(true);\n\n  animElements.map((animElement, i) => {\n    if (animElement[1]) {\n      animElement[1].replaceChild(newElements[i], animElement[0]);\n      elements[i][0] = newElements[i];\n    }\n  });\n\n  return animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n  if (elementsToAnimate.length === 0) return;\n\n  let animSvgElement = animateSVG(svgElement, elementsToAnimate);\n  if (svgElement.parentNode == parent) {\n    parent.removeChild(svgElement);\n    parent.appendChild(animSvgElement);\n  }\n\n  // Replace the new svgElement (data has already been replaced)\n  setTimeout(() => {\n    if (animSvgElement.parentNode == parent) {\n      parent.removeChild(animSvgElement);\n      parent.appendChild(svgElement);\n    }\n  }, REPLACE_ALL_NEW_DUR);\n}\n","import SvgTip from \"../objects/SvgTip\";\nimport {\n  $,\n  isElementInViewport,\n  getElementContentWidth,\n  isHidden,\n} from \"../utils/dom\";\nimport {\n  makeSVGContainer,\n  makeSVGDefs,\n  makeSVGGroup,\n  makeText,\n} from \"../utils/draw\";\nimport {\n  BASE_MEASURES,\n  getExtraHeight,\n  getExtraWidth,\n  getTopOffset,\n  getLeftOffset,\n  INIT_CHART_UPDATE_TIMEOUT,\n  CHART_POST_ANIMATE_TIMEOUT,\n  DEFAULT_COLORS,\n} from \"../utils/constants\";\nimport { getColor, isValidColor } from \"../utils/colors\";\nimport { runSMILAnimation } from \"../utils/animation\";\nimport { downloadFile, prepareForExport } from \"../utils/export\";\nimport { deepClone } from \"../utils/helpers\";\n\nexport default class BaseChart {\n  constructor(parent, options) {\n    // deepclone options to avoid making changes to orignal object\n    options = deepClone(options);\n\n    this.parent =\n      typeof parent === \"string\" ? document.querySelector(parent) : parent;\n\n    if (!(this.parent instanceof HTMLElement)) {\n      throw new Error(\"No `parent` element to render on was provided.\");\n    }\n\n    this.rawChartArgs = options;\n\n    this.title = options.title || \"\";\n    this.type = options.type || \"\";\n\n    this.realData = this.prepareData(options.data);\n    this.data = this.prepareFirstData(this.realData);\n\n    this.colors = this.validateColors(options.colors, this.type);\n\n    this.config = {\n      showTooltip: 1, // calculate\n      showLegend: 1, // calculate\n      isNavigable: options.isNavigable || 0,\n      animate: typeof options.animate !== \"undefined\" ? options.animate : 1,\n      truncateLegends: options.truncateLegends || 1,\n    };\n\n    this.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n    let m = this.measures;\n    this.setMeasures(options);\n    if (!this.title.length) {\n      m.titleHeight = 0;\n    }\n    if (!this.config.showLegend) m.legendHeight = 0;\n    this.argHeight = options.height || m.baseHeight;\n\n    this.state = {};\n    this.options = {};\n\n    this.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n    if (this.config.isNavigable) {\n      this.overlays = [];\n    }\n\n    this.configure(options);\n  }\n\n  prepareData(data) {\n    return data;\n  }\n\n  prepareFirstData(data) {\n    return data;\n  }\n\n  validateColors(colors, type) {\n    const validColors = [];\n    colors = (colors || []).concat(DEFAULT_COLORS[type]);\n    colors.forEach((string) => {\n      const color = getColor(string);\n      if (!isValidColor(color)) {\n        console.warn('\"' + string + '\" is not a valid color.');\n      } else {\n        validColors.push(color);\n      }\n    });\n    return validColors;\n  }\n\n  setMeasures() {\n    // Override measures, including those for title and legend\n    // set config for legend and title\n  }\n\n  configure() {\n    let height = this.argHeight;\n    this.baseHeight = height;\n    this.height = height - getExtraHeight(this.measures);\n\n    // Bind window events\n    this.boundDrawFn = () => this.draw(true);\n    if (ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(this.boundDrawFn);\n      this.resizeObserver.observe(this.parent);\n    }\n    window.addEventListener(\"resize\", this.boundDrawFn);\n    window.addEventListener(\"orientationchange\", this.boundDrawFn);\n  }\n\n  destroy() {\n    if (this.resizeObserver) this.resizeObserver.disconnect();\n    window.removeEventListener(\"resize\", this.boundDrawFn);\n    window.removeEventListener(\"orientationchange\", this.boundDrawFn);\n  }\n\n  // Has to be called manually\n  setup() {\n    this.makeContainer();\n    this.updateWidth();\n    this.makeTooltip();\n\n    this.draw(false, true);\n  }\n\n  makeContainer() {\n    // Chart needs a dedicated parent element\n    this.parent.innerHTML = \"\";\n\n    let args = {\n      inside: this.parent,\n      className: \"chart-container\",\n    };\n\n    if (this.independentWidth) {\n      args.styles = { width: this.independentWidth + \"px\" };\n    }\n\n    this.container = $.create(\"div\", args);\n  }\n\n  makeTooltip() {\n    this.tip = new SvgTip({\n      parent: this.container,\n      colors: this.colors,\n    });\n    this.bindTooltip();\n  }\n\n  bindTooltip() {}\n\n  draw(onlyWidthChange = false, init = false) {\n    if (onlyWidthChange && isHidden(this.parent)) {\n      // Don't update anything if the chart is hidden\n      return;\n    }\n    this.updateWidth();\n\n    this.calc(onlyWidthChange);\n    this.makeChartArea();\n    this.setupComponents();\n\n    this.components.forEach((c) => c.setup(this.drawArea));\n    // this.components.forEach(c => c.make());\n    this.render(this.components, false);\n\n    if (init) {\n      this.data = this.realData;\n      setTimeout(() => {\n        this.update(this.data);\n      }, this.initTimeout);\n    }\n\n    this.renderLegend();\n\n    this.setupNavigation(init);\n  }\n\n  calc() {} // builds state\n\n  updateWidth() {\n    this.baseWidth = getElementContentWidth(this.parent);\n    this.width = this.baseWidth - getExtraWidth(this.measures);\n  }\n\n  makeChartArea() {\n    if (this.svg) {\n      this.container.removeChild(this.svg);\n    }\n    let m = this.measures;\n\n    this.svg = makeSVGContainer(\n      this.container,\n      \"frappe-chart chart\",\n      this.baseWidth,\n      this.baseHeight\n    );\n    this.svgDefs = makeSVGDefs(this.svg);\n\n    if (this.title.length) {\n      this.titleEL = makeText(\n        \"title\",\n        m.margins.left,\n        m.margins.top,\n        this.title,\n        {\n          fontSize: m.titleFontSize,\n          fill: \"#666666\",\n          dy: m.titleFontSize,\n        }\n      );\n    }\n\n    let top = getTopOffset(m);\n    this.drawArea = makeSVGGroup(\n      this.type + \"-chart chart-draw-area\",\n      `translate(${getLeftOffset(m)}, ${top})`\n    );\n\n    if (this.config.showLegend) {\n      top += this.height + m.paddings.bottom;\n      this.legendArea = makeSVGGroup(\n        \"chart-legend\",\n        `translate(${getLeftOffset(m)}, ${top})`\n      );\n    }\n\n    if (this.title.length) {\n      this.svg.appendChild(this.titleEL);\n    }\n    this.svg.appendChild(this.drawArea);\n    if (this.config.showLegend) {\n      this.svg.appendChild(this.legendArea);\n    }\n\n    this.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n  }\n\n  updateTipOffset(x, y) {\n    this.tip.offset = {\n      x: x,\n      y: y,\n    };\n  }\n\n  setupComponents() {\n    this.components = new Map();\n  }\n\n  update(data) {\n    if (!data) {\n      console.error(\"No data to update.\");\n    }\n    this.data = this.prepareData(data);\n    this.calc(); // builds state\n    this.render(this.components, this.config.animate);\n    this.renderLegend();\n  }\n\n  render(components = this.components, animate = true) {\n    if (this.config.isNavigable) {\n      // Remove all existing overlays\n      this.overlays.map((o) => o.parentNode.removeChild(o));\n      // ref.parentNode.insertBefore(element, ref);\n    }\n    let elementsToAnimate = [];\n    // Can decouple to this.refreshComponents() first to save animation timeout\n    components.forEach((c) => {\n      elementsToAnimate = elementsToAnimate.concat(c.update(animate));\n    });\n    if (elementsToAnimate.length > 0) {\n      runSMILAnimation(this.container, this.svg, elementsToAnimate);\n      setTimeout(() => {\n        components.forEach((c) => c.make());\n        this.updateNav();\n      }, CHART_POST_ANIMATE_TIMEOUT);\n    } else {\n      components.forEach((c) => c.make());\n      this.updateNav();\n    }\n  }\n\n  updateNav() {\n    if (this.config.isNavigable) {\n      this.makeOverlay();\n      this.bindUnits();\n    }\n  }\n\n  renderLegend() {}\n\n  setupNavigation(init = false) {\n    if (!this.config.isNavigable) return;\n\n    if (init) {\n      this.bindOverlay();\n\n      this.keyActions = {\n        13: this.onEnterKey.bind(this),\n        37: this.onLeftArrow.bind(this),\n        38: this.onUpArrow.bind(this),\n        39: this.onRightArrow.bind(this),\n        40: this.onDownArrow.bind(this),\n      };\n\n      document.addEventListener(\"keydown\", (e) => {\n        if (isElementInViewport(this.container)) {\n          e = e || window.event;\n          if (this.keyActions[e.keyCode]) {\n            this.keyActions[e.keyCode]();\n          }\n        }\n      });\n    }\n  }\n\n  makeOverlay() {}\n  updateOverlay() {}\n  bindOverlay() {}\n  bindUnits() {}\n\n  onLeftArrow() {}\n  onRightArrow() {}\n  onUpArrow() {}\n  onDownArrow() {}\n  onEnterKey() {}\n\n  addDataPoint() {}\n  removeDataPoint() {}\n\n  getDataPoint() {}\n  setCurrentDataPoint() {}\n\n  updateDataset() {}\n\n  export() {\n    let chartSvg = prepareForExport(this.svg);\n    downloadFile(this.title || \"Chart\", [chartSvg]);\n  }\n}\n","import { $ } from \"../utils/dom\";\nimport { CSSTEXT } from \"../../css/chartsCss\";\n\nexport function downloadFile(filename, data) {\n  var a = document.createElement(\"a\");\n  a.style = \"display: none\";\n  var blob = new Blob(data, { type: \"image/svg+xml; charset=utf-8\" });\n  var url = window.URL.createObjectURL(blob);\n  a.href = url;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n  setTimeout(function () {\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }, 300);\n}\n\nexport function prepareForExport(svg) {\n  let clone = svg.cloneNode(true);\n  clone.classList.add(\"chart-container\");\n  clone.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n  clone.setAttribute(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n  let styleEl = $.create(\"style\", {\n    innerHTML: CSSTEXT,\n  });\n  clone.insertBefore(styleEl, clone.firstChild);\n\n  let container = $.create(\"div\");\n  container.appendChild(clone);\n\n  return container.innerHTML;\n}\n","export const CSSTEXT =\n  \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";\n","import BaseChart from \"./BaseChart\";\nimport { truncateString } from \"../utils/draw-utils\";\nimport { legendDot } from \"../utils/draw\";\nimport { round } from \"../utils/helpers\";\nimport { getExtraWidth } from \"../utils/constants\";\n\nexport default class AggregationChart extends BaseChart {\n  constructor(parent, args) {\n    super(parent, args);\n  }\n\n  configure(args) {\n    super.configure(args);\n\n    this.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n    this.config.maxSlices = args.maxSlices || 20;\n    this.config.maxLegendPoints = args.maxLegendPoints || 20;\n  }\n\n  calc() {\n    let s = this.state;\n    let maxSlices = this.config.maxSlices;\n    s.sliceTotals = [];\n\n    let allTotals = this.data.labels\n      .map((label, i) => {\n        let total = 0;\n        this.data.datasets.map((e) => {\n          total += e.values[i];\n        });\n        return [total, label];\n      })\n      .filter((d) => {\n        return d[0] >= 0;\n      }); // keep only positive results\n\n    let totals = allTotals;\n    if (allTotals.length > maxSlices) {\n      // Prune and keep a grey area for rest as per maxSlices\n      allTotals.sort((a, b) => {\n        return b[0] - a[0];\n      });\n\n      totals = allTotals.slice(0, maxSlices - 1);\n      let remaining = allTotals.slice(maxSlices - 1);\n\n      let sumOfRemaining = 0;\n      remaining.map((d) => {\n        sumOfRemaining += d[0];\n      });\n      totals.push([sumOfRemaining, \"Rest\"]);\n      this.colors[maxSlices - 1] = \"grey\";\n    }\n\n    s.labels = [];\n    totals.map((d) => {\n      s.sliceTotals.push(round(d[0]));\n      s.labels.push(d[1]);\n    });\n\n    s.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n    this.center = {\n      x: this.width / 2,\n      y: this.height / 2,\n    };\n  }\n\n  renderLegend() {\n    let s = this.state;\n    this.legendArea.textContent = \"\";\n    this.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n    let count = 0;\n    let y = 0;\n    this.legendTotals.map((d, i) => {\n      let barWidth = 150;\n      let divisor = Math.floor(\n        (this.width - getExtraWidth(this.measures)) / barWidth\n      );\n      if (this.legendTotals.length < divisor) {\n        barWidth = this.width / this.legendTotals.length;\n      }\n      if (count > divisor) {\n        count = 0;\n        y += 20;\n      }\n      let x = barWidth * count + 5;\n      let label = this.config.truncateLegends\n        ? truncateString(s.labels[i], barWidth / 10)\n        : s.labels[i];\n      let formatted = this.config.formatTooltipY\n        ? this.config.formatTooltipY(d)\n        : d;\n      let dot = legendDot(\n        x,\n        y,\n        5,\n        this.colors[i],\n        `${label}: ${formatted}`,\n        false\n      );\n      this.legendArea.appendChild(dot);\n      count++;\n    });\n  }\n}\n","// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\nexport const MONTH_NAMES_SHORT = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nexport const DAY_NAMES_SHORT = [\n  \"Sun\",\n  \"Mon\",\n  \"Tue\",\n  \"Wed\",\n  \"Thu\",\n  \"Fri\",\n  \"Sat\",\n];\nexport const DAY_NAMES = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n  let result = new Date(date);\n  result.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n  return result;\n}\n\nexport function getYyyyMmDd(date) {\n  let dd = date.getDate();\n  let mm = date.getMonth() + 1; // getMonth() is zero-based\n  return [\n    date.getFullYear(),\n    (mm > 9 ? \"\" : \"0\") + mm,\n    (dd > 9 ? \"\" : \"0\") + dd,\n  ].join(\"-\");\n}\n\nexport function clone(date) {\n  return new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n  return date.getTime() / NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n  let midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n  if (roundAhead) {\n    return midnightTs + SEC_IN_DAY;\n  }\n  return midnightTs;\n}\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n  let weekStartDate = setDayToSunday(startDate);\n  return Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n  let millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n  return (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n  return (\n    startDate.getMonth() === endDate.getMonth() &&\n    startDate.getFullYear() === endDate.getFullYear()\n  );\n}\n\nexport function getMonthName(i, short = false) {\n  let monthName = MONTH_NAMES[i];\n  return short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth(month, year) {\n  return new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n  let newDate = clone(date);\n  const day = newDate.getDay();\n  if (day !== 0) {\n    addDays(newDate, -1 * day);\n  }\n  return newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n  date.setDate(date.getDate() + numberOfDays);\n}\n","import { makeSVGGroup } from \"../utils/draw\";\nimport {\n  makeText,\n  makePath,\n  xLine,\n  yLine,\n  yMarker,\n  yRegion,\n  datasetBar,\n  datasetDot,\n  percentageBar,\n  getPaths,\n  heatSquare,\n} from \"../utils/draw\";\nimport { equilizeNoOfElements } from \"../utils/draw-utils\";\nimport {\n  translateHoriLine,\n  translateVertLine,\n  animateRegion,\n  animateBar,\n  animateDot,\n  animatePath,\n  animatePathStr,\n} from \"../utils/animate\";\nimport { getMonthName } from \"../utils/date-utils\";\n\nclass ChartComponent {\n  constructor({\n    layerClass = \"\",\n    layerTransform = \"\",\n    constants,\n\n    getData,\n    makeElements,\n    animateElements,\n  }) {\n    this.layerTransform = layerTransform;\n    this.constants = constants;\n\n    this.makeElements = makeElements;\n    this.getData = getData;\n\n    this.animateElements = animateElements;\n\n    this.store = [];\n    this.labels = [];\n\n    this.layerClass = layerClass;\n    this.layerClass =\n      typeof this.layerClass === \"function\"\n        ? this.layerClass()\n        : this.layerClass;\n\n    this.refresh();\n  }\n\n  refresh(data) {\n    this.data = data || this.getData();\n  }\n\n  setup(parent) {\n    this.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n  }\n\n  make() {\n    this.render(this.data);\n    this.oldData = this.data;\n  }\n\n  render(data) {\n    this.store = this.makeElements(data);\n\n    this.layer.textContent = \"\";\n    this.store.forEach((element) => {\n      this.layer.appendChild(element);\n    });\n    this.labels.forEach((element) => {\n      this.layer.appendChild(element);\n    });\n  }\n\n  update(animate = true) {\n    this.refresh();\n    let animateElements = [];\n    if (animate) {\n      animateElements = this.animateElements(this.data) || [];\n    }\n    return animateElements;\n  }\n}\n\nlet componentConfigs = {\n  donutSlices: {\n    layerClass: \"donut-slices\",\n    makeElements(data) {\n      return data.sliceStrings.map((s, i) => {\n        let slice = makePath(\n          s,\n          \"donut-path\",\n          data.colors[i],\n          \"none\",\n          data.strokeWidth\n        );\n        slice.style.transition = \"transform .3s;\";\n        return slice;\n      });\n    },\n\n    animateElements(newData) {\n      return this.store.map((slice, i) =>\n        animatePathStr(slice, newData.sliceStrings[i])\n      );\n    },\n  },\n  pieSlices: {\n    layerClass: \"pie-slices\",\n    makeElements(data) {\n      return data.sliceStrings.map((s, i) => {\n        let slice = makePath(s, \"pie-path\", \"none\", data.colors[i]);\n        slice.style.transition = \"transform .3s;\";\n        return slice;\n      });\n    },\n\n    animateElements(newData) {\n      return this.store.map((slice, i) =>\n        animatePathStr(slice, newData.sliceStrings[i])\n      );\n    },\n  },\n  percentageBars: {\n    layerClass: \"percentage-bars\",\n    makeElements(data) {\n      return data.xPositions.map((x, i) => {\n        let y = 0;\n        let bar = percentageBar(\n          x,\n          y,\n          data.widths[i],\n          this.constants.barHeight,\n          this.constants.barDepth,\n          data.colors[i]\n        );\n        return bar;\n      });\n    },\n\n    animateElements(newData) {\n      if (newData) return [];\n    },\n  },\n  yAxis: {\n    layerClass: \"y axis\",\n    makeElements(data) {\n      return data.positions.map((position, i) =>\n        yLine(position, data.labels[i], this.constants.width, {\n          mode: this.constants.mode,\n          pos: this.constants.pos,\n          shortenNumbers: this.constants.shortenNumbers,\n        })\n      );\n    },\n\n    animateElements(newData) {\n      let newPos = newData.positions;\n      let newLabels = newData.labels;\n      let oldPos = this.oldData.positions;\n      let oldLabels = this.oldData.labels;\n\n      [oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n      [oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n      this.render({\n        positions: oldPos,\n        labels: newLabels,\n      });\n\n      return this.store.map((line, i) => {\n        return translateHoriLine(line, newPos[i], oldPos[i]);\n      });\n    },\n  },\n\n  xAxis: {\n    layerClass: \"x axis\",\n    makeElements(data) {\n      return data.positions.map((position, i) =>\n        xLine(position, data.calcLabels[i], this.constants.height, {\n          mode: this.constants.mode,\n          pos: this.constants.pos,\n        })\n      );\n    },\n\n    animateElements(newData) {\n      let newPos = newData.positions;\n      let newLabels = newData.calcLabels;\n      let oldPos = this.oldData.positions;\n      let oldLabels = this.oldData.calcLabels;\n\n      [oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n      [oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n      this.render({\n        positions: oldPos,\n        calcLabels: newLabels,\n      });\n\n      return this.store.map((line, i) => {\n        return translateVertLine(line, newPos[i], oldPos[i]);\n      });\n    },\n  },\n\n  yMarkers: {\n    layerClass: \"y-markers\",\n    makeElements(data) {\n      return data.map((m) =>\n        yMarker(m.position, m.label, this.constants.width, {\n          labelPos: m.options.labelPos,\n          mode: \"span\",\n          lineType: \"dashed\",\n        })\n      );\n    },\n    animateElements(newData) {\n      [this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n      let newPos = newData.map((d) => d.position);\n      let newLabels = newData.map((d) => d.label);\n      let newOptions = newData.map((d) => d.options);\n\n      let oldPos = this.oldData.map((d) => d.position);\n\n      this.render(\n        oldPos.map((pos, i) => {\n          return {\n            position: oldPos[i],\n            label: newLabels[i],\n            options: newOptions[i],\n          };\n        })\n      );\n\n      return this.store.map((line, i) => {\n        return translateHoriLine(line, newPos[i], oldPos[i]);\n      });\n    },\n  },\n\n  yRegions: {\n    layerClass: \"y-regions\",\n    makeElements(data) {\n      return data.map((r) =>\n        yRegion(r.startPos, r.endPos, this.constants.width, r.label, {\n          labelPos: r.options.labelPos,\n        })\n      );\n    },\n    animateElements(newData) {\n      [this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n      let newPos = newData.map((d) => d.endPos);\n      let newLabels = newData.map((d) => d.label);\n      let newStarts = newData.map((d) => d.startPos);\n      let newOptions = newData.map((d) => d.options);\n\n      let oldPos = this.oldData.map((d) => d.endPos);\n      let oldStarts = this.oldData.map((d) => d.startPos);\n\n      this.render(\n        oldPos.map((pos, i) => {\n          return {\n            startPos: oldStarts[i],\n            endPos: oldPos[i],\n            label: newLabels[i],\n            options: newOptions[i],\n          };\n        })\n      );\n\n      let animateElements = [];\n\n      this.store.map((rectGroup, i) => {\n        animateElements = animateElements.concat(\n          animateRegion(rectGroup, newStarts[i], newPos[i], oldPos[i])\n        );\n      });\n\n      return animateElements;\n    },\n  },\n\n  heatDomain: {\n    layerClass: function () {\n      return \"heat-domain domain-\" + this.constants.index;\n    },\n    makeElements(data) {\n      let { index, colWidth, rowHeight, squareSize, radius, xTranslate } =\n        this.constants;\n      let monthNameHeight = -12;\n      let x = xTranslate,\n        y = 0;\n\n      this.serializedSubDomains = [];\n\n      data.cols.map((week, weekNo) => {\n        if (weekNo === 1) {\n          this.labels.push(\n            makeText(\n              \"domain-name\",\n              x,\n              monthNameHeight,\n              getMonthName(index, true).toUpperCase(),\n              {\n                fontSize: 9,\n              }\n            )\n          );\n        }\n        week.map((day, i) => {\n          if (day.fill) {\n            let data = {\n              \"data-date\": day.yyyyMmDd,\n              \"data-value\": day.dataValue,\n              \"data-day\": i,\n            };\n            let square = heatSquare(\n              \"day\",\n              x,\n              y,\n              squareSize,\n              radius,\n              day.fill,\n              data\n            );\n            this.serializedSubDomains.push(square);\n          }\n          y += rowHeight;\n        });\n        y = 0;\n        x += colWidth;\n      });\n\n      return this.serializedSubDomains;\n    },\n\n    animateElements(newData) {\n      if (newData) return [];\n    },\n  },\n\n  barGraph: {\n    layerClass: function () {\n      return \"dataset-units dataset-bars dataset-\" + this.constants.index;\n    },\n    makeElements(data) {\n      let c = this.constants;\n      this.unitType = \"bar\";\n      this.units = data.yPositions.map((y, j) => {\n        return datasetBar(\n          data.xPositions[j],\n          y,\n          data.barWidth,\n          c.color,\n          data.labels[j],\n          j,\n          data.offsets[j],\n          {\n            zeroLine: data.zeroLine,\n            barsWidth: data.barsWidth,\n            minHeight: c.minHeight,\n          }\n        );\n      });\n      return this.units;\n    },\n    animateElements(newData) {\n      let newXPos = newData.xPositions;\n      let newYPos = newData.yPositions;\n      let newOffsets = newData.offsets;\n      let newLabels = newData.labels;\n\n      let oldXPos = this.oldData.xPositions;\n      let oldYPos = this.oldData.yPositions;\n      let oldOffsets = this.oldData.offsets;\n      let oldLabels = this.oldData.labels;\n\n      [oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n      [oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n      [oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n      [oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n      this.render({\n        xPositions: oldXPos,\n        yPositions: oldYPos,\n        offsets: oldOffsets,\n        labels: newLabels,\n\n        zeroLine: this.oldData.zeroLine,\n        barsWidth: this.oldData.barsWidth,\n        barWidth: this.oldData.barWidth,\n      });\n\n      let animateElements = [];\n\n      this.store.map((bar, i) => {\n        animateElements = animateElements.concat(\n          animateBar(\n            bar,\n            newXPos[i],\n            newYPos[i],\n            newData.barWidth,\n            newOffsets[i],\n            { zeroLine: newData.zeroLine }\n          )\n        );\n      });\n\n      return animateElements;\n    },\n  },\n\n  lineGraph: {\n    layerClass: function () {\n      return \"dataset-units dataset-line dataset-\" + this.constants.index;\n    },\n    makeElements(data) {\n      let c = this.constants;\n      this.unitType = \"dot\";\n      this.paths = {};\n      if (!c.hideLine) {\n        this.paths = getPaths(\n          data.xPositions,\n          data.yPositions,\n          c.color,\n          {\n            heatline: c.heatline,\n            regionFill: c.regionFill,\n            spline: c.spline,\n          },\n          {\n            svgDefs: c.svgDefs,\n            zeroLine: data.zeroLine,\n          }\n        );\n      }\n\n      this.units = [];\n      if (!c.hideDots) {\n        this.units = data.yPositions.map((y, j) => {\n          return datasetDot(\n            data.xPositions[j],\n            y,\n            data.radius,\n            c.color,\n            c.valuesOverPoints ? data.values[j] : \"\",\n            j\n          );\n        });\n      }\n\n      return Object.values(this.paths).concat(this.units);\n    },\n    animateElements(newData) {\n      let newXPos = newData.xPositions;\n      let newYPos = newData.yPositions;\n      let newValues = newData.values;\n\n      let oldXPos = this.oldData.xPositions;\n      let oldYPos = this.oldData.yPositions;\n      let oldValues = this.oldData.values;\n\n      [oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n      [oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n      [oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n      this.render({\n        xPositions: oldXPos,\n        yPositions: oldYPos,\n        values: newValues,\n\n        zeroLine: this.oldData.zeroLine,\n        radius: this.oldData.radius,\n      });\n\n      let animateElements = [];\n\n      if (Object.keys(this.paths).length) {\n        animateElements = animateElements.concat(\n          animatePath(\n            this.paths,\n            newXPos,\n            newYPos,\n            newData.zeroLine,\n            this.constants.spline\n          )\n        );\n      }\n\n      if (this.units.length) {\n        this.units.map((dot, i) => {\n          animateElements = animateElements.concat(\n            animateDot(dot, newXPos[i], newYPos[i])\n          );\n        });\n      }\n\n      return animateElements;\n    },\n  },\n};\n\nexport function getComponent(name, constants, getData) {\n  let keys = Object.keys(componentConfigs).filter((k) => name.includes(k));\n  let config = componentConfigs[keys[0]];\n  Object.assign(config, {\n    constants: constants,\n    getData: getData,\n  });\n  return new ChartComponent(config);\n}\n","import AggregationChart from \"./AggregationChart\";\nimport { getOffset } from \"../utils/dom\";\nimport { getComponent } from \"../objects/ChartComponents\";\nimport {\n  PERCENTAGE_BAR_DEFAULT_HEIGHT,\n  PERCENTAGE_BAR_DEFAULT_DEPTH,\n} from \"../utils/constants\";\n\nexport default class PercentageChart extends AggregationChart {\n  constructor(parent, args) {\n    super(parent, args);\n    this.type = \"percentage\";\n    this.setup();\n  }\n\n  setMeasures(options) {\n    let m = this.measures;\n    this.barOptions = options.barOptions || {};\n\n    let b = this.barOptions;\n    b.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n    b.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\n\n    m.paddings.right = 30;\n    m.legendHeight = 60;\n    m.baseHeight = (b.height + b.depth * 0.5) * 8;\n  }\n\n  setupComponents() {\n    let s = this.state;\n\n    let componentConfigs = [\n      [\n        \"percentageBars\",\n        {\n          barHeight: this.barOptions.height,\n          barDepth: this.barOptions.depth,\n        },\n        function () {\n          return {\n            xPositions: s.xPositions,\n            widths: s.widths,\n            colors: this.colors,\n          };\n        }.bind(this),\n      ],\n    ];\n\n    this.components = new Map(\n      componentConfigs.map((args) => {\n        let component = getComponent(...args);\n        return [args[0], component];\n      })\n    );\n  }\n\n  calc() {\n    super.calc();\n    let s = this.state;\n\n    s.xPositions = [];\n    s.widths = [];\n\n    let xPos = 0;\n    s.sliceTotals.map((value) => {\n      let width = (this.width * value) / s.grandTotal;\n      s.widths.push(width);\n      s.xPositions.push(xPos);\n      xPos += width;\n    });\n  }\n\n  makeDataByIndex() {}\n\n  bindTooltip() {\n    let s = this.state;\n    this.container.addEventListener(\"mousemove\", (e) => {\n      let bars = this.components.get(\"percentageBars\").store;\n      let bar = e.target;\n      if (bars.includes(bar)) {\n        let i = bars.indexOf(bar);\n        let gOff = getOffset(this.container),\n          pOff = getOffset(bar);\n\n        let x = pOff.left - gOff.left + parseInt(bar.getAttribute(\"width\")) / 2;\n        let y = pOff.top - gOff.top;\n        let title =\n          (this.formattedLabels && this.formattedLabels.length > 0\n            ? this.formattedLabels[i]\n            : this.state.labels[i]) + \": \";\n        let fraction = s.sliceTotals[i] / s.grandTotal;\n\n        this.tip.setValues(x, y, {\n          name: title,\n          value: (fraction * 100).toFixed(1) + \"%\",\n        });\n        this.tip.showTip();\n      }\n    });\n  }\n}\n","import AggregationChart from \"./AggregationChart\";\nimport { getComponent } from \"../objects/ChartComponents\";\nimport { getOffset } from \"../utils/dom\";\nimport { getPositionByAngle } from \"../utils/helpers\";\nimport { makeArcPathStr, makeCircleStr } from \"../utils/draw\";\nimport { lightenDarkenColor } from \"../utils/colors\";\nimport { transform } from \"../utils/animation\";\nimport { FULL_ANGLE } from \"../utils/constants\";\n\nexport default class PieChart extends AggregationChart {\n  constructor(parent, args) {\n    super(parent, args);\n    this.type = \"pie\";\n    this.initTimeout = 0;\n    this.init = 1;\n\n    this.setup();\n  }\n\n  configure(args) {\n    super.configure(args);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseLeave = this.mouseLeave.bind(this);\n\n    this.hoverRadio = args.hoverRadio || 0.1;\n    this.config.startAngle = args.startAngle || 0;\n\n    this.clockWise = args.clockWise || false;\n  }\n\n  calc() {\n    super.calc();\n    let s = this.state;\n    this.radius = this.height > this.width ? this.center.x : this.center.y;\n\n    const { radius, clockWise } = this;\n\n    const prevSlicesProperties = s.slicesProperties || [];\n    s.sliceStrings = [];\n    s.slicesProperties = [];\n    let curAngle = 180 - this.config.startAngle;\n    s.sliceTotals.map((total, i) => {\n      const startAngle = curAngle;\n      const originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n      const largeArc = originDiffAngle > 180 ? 1 : 0;\n      const diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n      const endAngle = (curAngle = curAngle + diffAngle);\n      const startPosition = getPositionByAngle(startAngle, radius);\n      const endPosition = getPositionByAngle(endAngle, radius);\n\n      const prevProperty = this.init && prevSlicesProperties[i];\n\n      let curStart, curEnd;\n      if (this.init) {\n        curStart = prevProperty ? prevProperty.startPosition : startPosition;\n        curEnd = prevProperty ? prevProperty.endPosition : startPosition;\n      } else {\n        curStart = startPosition;\n        curEnd = endPosition;\n      }\n      const curPath =\n        originDiffAngle === 360\n          ? makeCircleStr(\n              curStart,\n              curEnd,\n              this.center,\n              this.radius,\n              clockWise,\n              largeArc\n            )\n          : makeArcPathStr(\n              curStart,\n              curEnd,\n              this.center,\n              this.radius,\n              clockWise,\n              largeArc\n            );\n\n      s.sliceStrings.push(curPath);\n      s.slicesProperties.push({\n        startPosition,\n        endPosition,\n        value: total,\n        total: s.grandTotal,\n        startAngle,\n        endAngle,\n        angle: diffAngle,\n      });\n    });\n    this.init = 0;\n  }\n\n  setupComponents() {\n    let s = this.state;\n\n    let componentConfigs = [\n      [\n        \"pieSlices\",\n        {},\n        function () {\n          return {\n            sliceStrings: s.sliceStrings,\n            colors: this.colors,\n          };\n        }.bind(this),\n      ],\n    ];\n\n    this.components = new Map(\n      componentConfigs.map((args) => {\n        let component = getComponent(...args);\n        return [args[0], component];\n      })\n    );\n  }\n\n  calTranslateByAngle(property) {\n    const { radius, hoverRadio } = this;\n    const position = getPositionByAngle(\n      property.startAngle + property.angle / 2,\n      radius\n    );\n    return `translate3d(${position.x * hoverRadio}px,${\n      position.y * hoverRadio\n    }px,0)`;\n  }\n\n  hoverSlice(path, i, flag, e) {\n    if (!path) return;\n    const color = this.colors[i];\n    if (flag) {\n      transform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n      path.style.fill = lightenDarkenColor(color, 50);\n      let g_off = getOffset(this.svg);\n      let x = e.pageX - g_off.left + 10;\n      let y = e.pageY - g_off.top - 10;\n      let title =\n        (this.formatted_labels && this.formatted_labels.length > 0\n          ? this.formatted_labels[i]\n          : this.state.labels[i]) + \": \";\n      let percent = (\n        (this.state.sliceTotals[i] * 100) /\n        this.state.grandTotal\n      ).toFixed(1);\n      this.tip.setValues(x, y, { name: title, value: percent + \"%\" });\n      this.tip.showTip();\n    } else {\n      transform(path, \"translate3d(0,0,0)\");\n      this.tip.hideTip();\n      path.style.fill = color;\n    }\n  }\n\n  bindTooltip() {\n    this.container.addEventListener(\"mousemove\", this.mouseMove);\n    this.container.addEventListener(\"mouseleave\", this.mouseLeave);\n  }\n\n  mouseMove(e) {\n    const target = e.target;\n    let slices = this.components.get(\"pieSlices\").store;\n    let prevIndex = this.curActiveSliceIndex;\n    let prevAcitve = this.curActiveSlice;\n    if (slices.includes(target)) {\n      let i = slices.indexOf(target);\n      this.hoverSlice(prevAcitve, prevIndex, false);\n      this.curActiveSlice = target;\n      this.curActiveSliceIndex = i;\n      this.hoverSlice(target, i, true, e);\n    } else {\n      this.mouseLeave();\n    }\n  }\n\n  mouseLeave() {\n    this.hoverSlice(this.curActiveSlice, this.curActiveSliceIndex, false);\n  }\n}\n","import { floatTwo } from \"./helpers\";\n\nfunction normalize(x) {\n  // Calculates mantissa and exponent of a number\n  // Returns normalized number and exponent\n  // https://stackoverflow.com/q/9383593/6495043\n\n  if (x === 0) {\n    return [0, 0];\n  }\n  if (isNaN(x)) {\n    return { mantissa: -6755399441055744, exponent: 972 };\n  }\n  var sig = x > 0 ? 1 : -1;\n  if (!isFinite(x)) {\n    return { mantissa: sig * 4503599627370496, exponent: 972 };\n  }\n\n  x = Math.abs(x);\n  var exp = Math.floor(Math.log10(x));\n  var man = x / Math.pow(10, exp);\n\n  return [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min = 0) {\n  let upperBound = Math.ceil(max);\n  let lowerBound = Math.floor(min);\n  let range = upperBound - lowerBound;\n\n  let noOfParts = range;\n  let partSize = 1;\n\n  // To avoid too many partitions\n  if (range > 5) {\n    if (range % 2 !== 0) {\n      upperBound++;\n      // Recalc range\n      range = upperBound - lowerBound;\n    }\n    noOfParts = range / 2;\n    partSize = 2;\n  }\n\n  // Special case: 1 and 2\n  if (range <= 2) {\n    noOfParts = 4;\n    partSize = range / noOfParts;\n  }\n\n  // Special case: 0\n  if (range === 0) {\n    noOfParts = 5;\n    partSize = 1;\n  }\n\n  let intervals = [];\n  for (var i = 0; i <= noOfParts; i++) {\n    intervals.push(lowerBound + partSize * i);\n  }\n  return intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue = 0) {\n  let [normalMaxValue, exponent] = normalize(maxValue);\n  let normalMinValue = minValue ? minValue / Math.pow(10, exponent) : 0;\n\n  // Allow only 7 significant digits\n  normalMaxValue = normalMaxValue.toFixed(6);\n\n  let intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n  intervals = intervals.map((value) => value * Math.pow(10, exponent));\n  return intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum = false) {\n  //*** Where the magic happens ***\n\n  // Calculates best-fit y intervals from given values\n  // and returns the interval array\n\n  let maxValue = Math.max(...values);\n  let minValue = Math.min(...values);\n\n  // Exponent to be used for pretty print\n  let exponent = 0,\n    intervals = []; // eslint-disable-line no-unused-vars\n\n  function getPositiveFirstIntervals(maxValue, absMinValue) {\n    let intervals = getChartIntervals(maxValue);\n\n    let intervalSize = intervals[1] - intervals[0];\n\n    // Then unshift the negative values\n    let value = 0;\n    for (var i = 1; value < absMinValue; i++) {\n      value += intervalSize;\n      intervals.unshift(-1 * value);\n    }\n    return intervals;\n  }\n\n  // CASE I: Both non-negative\n\n  if (maxValue >= 0 && minValue >= 0) {\n    exponent = normalize(maxValue)[1];\n    if (!withMinimum) {\n      intervals = getChartIntervals(maxValue);\n    } else {\n      intervals = getChartIntervals(maxValue, minValue);\n    }\n  }\n\n  // CASE II: Only minValue negative\n  else if (maxValue > 0 && minValue < 0) {\n    // `withMinimum` irrelevant in this case,\n    // We'll be handling both sides of zero separately\n    // (both starting from zero)\n    // Because ceil() and floor() behave differently\n    // in those two regions\n\n    let absMinValue = Math.abs(minValue);\n\n    if (maxValue >= absMinValue) {\n      exponent = normalize(maxValue)[1];\n      intervals = getPositiveFirstIntervals(maxValue, absMinValue);\n    } else {\n      // Mirror: maxValue => absMinValue, then change sign\n      exponent = normalize(absMinValue)[1];\n      let posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n      intervals = posIntervals.reverse().map((d) => d * -1);\n    }\n  }\n\n  // CASE III: Both non-positive\n  else if (maxValue <= 0 && minValue <= 0) {\n    // Mirrored Case I:\n    // Work with positives, then reverse the sign and array\n\n    let pseudoMaxValue = Math.abs(minValue);\n    let pseudoMinValue = Math.abs(maxValue);\n\n    /* exponent = normalize(pseudoMaxValue)[1]; // TODO unused? */\n    if (!withMinimum) {\n      intervals = getChartIntervals(pseudoMaxValue);\n    } else {\n      intervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n    }\n\n    intervals = intervals.reverse().map((d) => d * -1);\n  }\n\n  return intervals;\n}\n\nexport function getZeroIndex(yPts) {\n  let zeroIndex;\n  let interval = getIntervalSize(yPts);\n  if (yPts.indexOf(0) >= 0) {\n    // the range has a given zero\n    // zero-line on the chart\n    zeroIndex = yPts.indexOf(0);\n  } else if (yPts[0] > 0) {\n    // Minimum value is positive\n    // zero-line is off the chart: below\n    let min = yPts[0];\n    zeroIndex = (-1 * min) / interval;\n  } else {\n    // Maximum value is negative\n    // zero-line is off the chart: above\n    let max = yPts[yPts.length - 1];\n    zeroIndex = (-1 * max) / interval + (yPts.length - 1);\n  }\n  return zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n  let range = max - min;\n  let part = (range * 1.0) / noOfIntervals;\n  let intervals = [];\n\n  for (var i = 0; i <= noOfIntervals; i++) {\n    intervals.push(min + part * i);\n  }\n\n  return asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n  return orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n  return orderedArray[orderedArray.length - 1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n  return floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function isInRange(val, min, max) {\n  return val > min && val < max;\n}\n\nexport function isInRange2D(coord, minCoord, maxCoord) {\n  return (\n    isInRange(coord[0], minCoord[0], maxCoord[0]) &&\n    isInRange(coord[1], minCoord[1], maxCoord[1])\n  );\n}\n\nexport function getClosestInArray(goal, arr, index = false) {\n  let closest = arr.reduce(function (prev, curr) {\n    return Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev;\n  }, []);\n\n  return index ? arr.indexOf(closest) : closest;\n}\n\nexport function calcDistribution(values, distributionSize) {\n  // Assume non-negative values,\n  // implying distribution minimum at zero\n\n  let dataMaxValue = Math.max(...values);\n\n  let distributionStep = 1 / (distributionSize - 1);\n  let distribution = [];\n\n  for (var i = 0; i < distributionSize; i++) {\n    let checkpoint = dataMaxValue * (distributionStep * i);\n    distribution.push(checkpoint);\n  }\n\n  return distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n  return distribution.filter((d) => d < value).length;\n}\n","import BaseChart from \"./BaseChart\";\nimport { getComponent } from \"../objects/ChartComponents\";\nimport { makeText, heatSquare } from \"../utils/draw\";\nimport {\n  DAY_NAMES_SHORT,\n  addDays,\n  areInSameMonth,\n  getLastDateInMonth,\n  setDayToSunday,\n  getYyyyMmDd,\n  getWeeksBetween,\n  getMonthName,\n  clone,\n  NO_OF_MILLIS,\n  NO_OF_YEAR_MONTHS,\n  NO_OF_DAYS_IN_WEEK,\n} from \"../utils/date-utils\";\nimport { calcDistribution, getMaxCheckpoint } from \"../utils/intervals\";\nimport {\n  getExtraHeight,\n  getExtraWidth,\n  HEATMAP_DISTRIBUTION_SIZE,\n  HEATMAP_SQUARE_SIZE,\n  HEATMAP_GUTTER_SIZE,\n} from \"../utils/constants\";\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n  constructor(parent, options) {\n    super(parent, options);\n    this.type = \"heatmap\";\n\n    this.countLabel = options.countLabel || \"\";\n\n    let validStarts = [\"Sunday\", \"Monday\"];\n    let startSubDomain = validStarts.includes(options.startSubDomain)\n      ? options.startSubDomain\n      : \"Sunday\";\n    this.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n    this.setup();\n  }\n\n  setMeasures(options) {\n    let m = this.measures;\n    this.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n    m.paddings.top = ROW_HEIGHT * 3;\n    m.paddings.bottom = 0;\n    m.legendHeight = ROW_HEIGHT * 2;\n    m.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK + getExtraHeight(m);\n\n    let d = this.data;\n    let spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n    this.independentWidth =\n      (getWeeksBetween(d.start, d.end) + spacing) * COL_WIDTH +\n      getExtraWidth(m);\n  }\n\n  updateWidth() {\n    let spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n    let noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n    this.baseWidth =\n      (noOfWeeks + spacing) * COL_WIDTH + getExtraWidth(this.measures);\n  }\n\n  prepareData(data = this.data) {\n    if (data.start && data.end && data.start > data.end) {\n      throw new Error(\"Start date cannot be greater than end date.\");\n    }\n\n    if (!data.start) {\n      data.start = new Date();\n      data.start.setFullYear(data.start.getFullYear() - 1);\n    }\n    if (!data.end) {\n      data.end = new Date();\n    }\n    data.dataPoints = data.dataPoints || {};\n\n    if (parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n      let points = {};\n      Object.keys(data.dataPoints).forEach((timestampSec) => {\n        let date = new Date(timestampSec * NO_OF_MILLIS);\n        points[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n      });\n      data.dataPoints = points;\n    }\n\n    return data;\n  }\n\n  calc() {\n    let s = this.state;\n\n    s.start = clone(this.data.start);\n    s.end = clone(this.data.end);\n\n    s.firstWeekStart = clone(s.start);\n    s.noOfWeeks = getWeeksBetween(s.start, s.end);\n    s.distribution = calcDistribution(\n      Object.values(this.data.dataPoints),\n      HEATMAP_DISTRIBUTION_SIZE\n    );\n\n    s.domainConfigs = this.getDomains();\n  }\n\n  setupComponents() {\n    let s = this.state;\n    let lessCol = this.discreteDomains ? 0 : 1;\n\n    let componentConfigs = s.domainConfigs.map((config, i) => [\n      \"heatDomain\",\n      {\n        index: config.index,\n        colWidth: COL_WIDTH,\n        rowHeight: ROW_HEIGHT,\n        squareSize: HEATMAP_SQUARE_SIZE,\n        radius: this.rawChartArgs.radius || 0,\n        xTranslate:\n          s.domainConfigs\n            .filter((config, j) => j < i)\n            .map((config) => config.cols.length - lessCol)\n            .reduce((a, b) => a + b, 0) * COL_WIDTH,\n      },\n      function () {\n        return s.domainConfigs[i];\n      }.bind(this),\n    ]);\n\n    this.components = new Map(\n      componentConfigs.map((args, i) => {\n        let component = getComponent(...args);\n        return [args[0] + \"-\" + i, component];\n      })\n    );\n\n    let y = 0;\n    DAY_NAMES_SHORT.forEach((dayName, i) => {\n      if ([1, 3, 5].includes(i)) {\n        let dayText = makeText(\"subdomain-name\", -COL_WIDTH / 2, y, dayName, {\n          fontSize: HEATMAP_SQUARE_SIZE,\n          dy: 8,\n          textAnchor: \"end\",\n        });\n        this.drawArea.appendChild(dayText);\n      }\n      y += ROW_HEIGHT;\n    });\n  }\n\n  update(data) {\n    if (!data) {\n      console.error(\"No data to update.\");\n    }\n\n    this.data = this.prepareData(data);\n    this.draw();\n    this.bindTooltip();\n  }\n\n  bindTooltip() {\n    this.container.addEventListener(\"mousemove\", (e) => {\n      this.components.forEach((comp) => {\n        let daySquares = comp.store;\n        let daySquare = e.target;\n        if (daySquares.includes(daySquare)) {\n          let count = daySquare.getAttribute(\"data-value\");\n          let dateParts = daySquare.getAttribute(\"data-date\").split(\"-\");\n\n          let month = getMonthName(parseInt(dateParts[1]) - 1, true);\n\n          let gOff = this.container.getBoundingClientRect(),\n            pOff = daySquare.getBoundingClientRect();\n\n          let width = parseInt(e.target.getAttribute(\"width\"));\n          let x = pOff.left - gOff.left + width / 2;\n          let y = pOff.top - gOff.top;\n          let value = count + \" \" + this.countLabel;\n          let name = \" on \" + month + \" \" + dateParts[0] + \", \" + dateParts[2];\n\n          this.tip.setValues(\n            x,\n            y,\n            { name: name, value: value, valueFirst: 1 },\n            []\n          );\n          this.tip.showTip();\n        }\n      });\n    });\n  }\n\n  renderLegend() {\n    this.legendArea.textContent = \"\";\n    let x = 0;\n    let y = ROW_HEIGHT;\n    let radius = this.rawChartArgs.radius || 0;\n\n    let lessText = makeText(\"subdomain-name\", x, y, \"Less\", {\n      fontSize: HEATMAP_SQUARE_SIZE + 1,\n      dy: 9,\n    });\n    x = COL_WIDTH * 2 + COL_WIDTH / 2;\n    this.legendArea.appendChild(lessText);\n\n    this.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n      const square = heatSquare(\n        \"heatmap-legend-unit\",\n        x + (COL_WIDTH + 3) * i,\n        y,\n        HEATMAP_SQUARE_SIZE,\n        radius,\n        color\n      );\n      this.legendArea.appendChild(square);\n    });\n\n    let moreTextX =\n      x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH / 4;\n    let moreText = makeText(\"subdomain-name\", moreTextX, y, \"More\", {\n      fontSize: HEATMAP_SQUARE_SIZE + 1,\n      dy: 9,\n    });\n    this.legendArea.appendChild(moreText);\n  }\n\n  getDomains() {\n    let s = this.state;\n    const [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n    const [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n    const noOfMonths = endMonth - startMonth + 1 + (endYear - startYear) * 12;\n\n    let domainConfigs = [];\n\n    let startOfMonth = clone(s.start);\n    for (var i = 0; i < noOfMonths; i++) {\n      let endDate = s.end;\n      if (!areInSameMonth(startOfMonth, s.end)) {\n        let [month, year] = [\n          startOfMonth.getMonth(),\n          startOfMonth.getFullYear(),\n        ];\n        endDate = getLastDateInMonth(month, year);\n      }\n      domainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n      addDays(endDate, 1);\n      startOfMonth = endDate;\n    }\n\n    return domainConfigs;\n  }\n\n  getDomainConfig(startDate, endDate = \"\") {\n    let [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n    let startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n    endDate = clone(endDate) || getLastDateInMonth(month, year);\n\n    let domainConfig = {\n      index: month,\n      cols: [],\n    };\n\n    addDays(endDate, 1);\n    let noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n    let cols = [],\n      col;\n    for (var i = 0; i < noOfMonthWeeks; i++) {\n      col = this.getCol(startOfWeek, month);\n      cols.push(col);\n\n      startOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n      addDays(startOfWeek, 1);\n    }\n\n    if (col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n      addDays(startOfWeek, 1);\n      cols.push(this.getCol(startOfWeek, month, true));\n    }\n\n    domainConfig.cols = cols;\n\n    return domainConfig;\n  }\n\n  getCol(startDate, month, empty = false) {\n    let s = this.state;\n\n    // startDate is the start of week\n    let currentDate = clone(startDate);\n    let col = [];\n\n    for (var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n      let config = {};\n\n      // Non-generic adjustment for entire heatmap, needs state\n      let currentDateWithinData =\n        currentDate >= s.start && currentDate <= s.end;\n\n      if (empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n        config.yyyyMmDd = getYyyyMmDd(currentDate);\n      } else {\n        config = this.getSubDomainConfig(currentDate);\n      }\n      col.push(config);\n    }\n\n    return col;\n  }\n\n  getSubDomainConfig(date) {\n    let yyyyMmDd = getYyyyMmDd(date);\n    let dataValue = this.data.dataPoints[yyyyMmDd];\n    let config = {\n      yyyyMmDd: yyyyMmDd,\n      dataValue: dataValue || 0,\n      fill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)],\n    };\n    return config;\n  }\n}\n","import { fillArray } from \"../utils/helpers\";\nimport {\n  DEFAULT_AXIS_CHART_TYPE,\n  AXIS_DATASET_CHART_TYPES,\n  DEFAULT_CHAR_WIDTH,\n} from \"../utils/constants\";\n\nexport function dataPrep(data, type) {\n  data.labels = data.labels || [];\n\n  let datasetLength = data.labels.length;\n\n  // Datasets\n  let datasets = data.datasets;\n  let zeroArray = new Array(datasetLength).fill(0);\n  if (!datasets) {\n    // default\n    datasets = [\n      {\n        values: zeroArray,\n      },\n    ];\n  }\n\n  datasets.map((d) => {\n    // Set values\n    if (!d.values) {\n      d.values = zeroArray;\n    } else {\n      // Check for non values\n      let vals = d.values;\n      vals = vals.map((val) => (!isNaN(val) ? val : 0));\n\n      // Trim or extend\n      if (vals.length > datasetLength) {\n        vals = vals.slice(0, datasetLength);\n      } else {\n        vals = fillArray(vals, datasetLength - vals.length, 0);\n      }\n      d.values = vals;\n    }\n\n    // Set type\n    if (!d.chartType) {\n      if (!AXIS_DATASET_CHART_TYPES.includes(type))\n        type === DEFAULT_AXIS_CHART_TYPE;\n      d.chartType = type;\n    }\n  });\n\n  // Markers\n\n  // Regions\n  // data.yRegions = data.yRegions || [];\n  if (data.yRegions) {\n    data.yRegions.map((d) => {\n      if (d.end < d.start) {\n        [d.start, d.end] = [d.end, d.start];\n      }\n    });\n  }\n\n  return data;\n}\n\nexport function zeroDataPrep(realData) {\n  let datasetLength = realData.labels.length;\n  let zeroArray = new Array(datasetLength).fill(0);\n\n  let zeroData = {\n    labels: realData.labels.slice(0, -1),\n    datasets: realData.datasets.map((d) => {\n      return {\n        name: \"\",\n        values: zeroArray.slice(0, -1),\n        chartType: d.chartType,\n      };\n    }),\n  };\n\n  if (realData.yMarkers) {\n    zeroData.yMarkers = [\n      {\n        value: 0,\n        label: \"\",\n      },\n    ];\n  }\n\n  if (realData.yRegions) {\n    zeroData.yRegions = [\n      {\n        start: 0,\n        end: 0,\n        label: \"\",\n      },\n    ];\n  }\n\n  return zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels = [], isSeries = true) {\n  let allowedSpace = chartWidth / labels.length;\n  if (allowedSpace <= 0) allowedSpace = 1;\n  let allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n  let seriesMultiple;\n  if (isSeries) {\n    // Find the maximum label length for spacing calculations\n    let maxLabelLength = Math.max(...labels.map((label) => label.length));\n    seriesMultiple = Math.ceil(maxLabelLength / allowedLetters);\n  }\n\n  let calcLabels = labels.map((label, i) => {\n    label += \"\";\n    if (label.length > allowedLetters) {\n      if (!isSeries) {\n        if (allowedLetters - 3 > 0) {\n          label = label.slice(0, allowedLetters - 3) + \" ...\";\n        } else {\n          label = label.slice(0, allowedLetters) + \"..\";\n        }\n      } else {\n        if (i % seriesMultiple !== 0) {\n          label = \"\";\n        }\n      }\n    }\n    return label;\n  });\n\n  return calcLabels;\n}\n","import BaseChart from \"./BaseChart\";\nimport {\n  dataPrep,\n  zeroDataPrep,\n  getShortenedLabels,\n} from \"../utils/axis-chart-utils\";\nimport { AXIS_LEGEND_BAR_SIZE } from \"../utils/constants\";\nimport { getComponent } from \"../objects/ChartComponents\";\nimport { getOffset, fire } from \"../utils/dom\";\nimport {\n  calcChartIntervals,\n  getIntervalSize,\n  getValueRange,\n  getZeroIndex,\n  scale,\n  getClosestInArray,\n} from \"../utils/intervals\";\nimport { floatTwo } from \"../utils/helpers\";\nimport { makeOverlay, updateOverlay, legendBar } from \"../utils/draw\";\nimport {\n  getTopOffset,\n  getLeftOffset,\n  MIN_BAR_PERCENT_HEIGHT,\n  BAR_CHART_SPACE_RATIO,\n  LINE_CHART_DOT_SIZE,\n} from \"../utils/constants\";\n\nexport default class AxisChart extends BaseChart {\n  constructor(parent, args) {\n    super(parent, args);\n\n    this.barOptions = args.barOptions || {};\n    this.lineOptions = args.lineOptions || {};\n\n    this.type = args.type || \"line\";\n    this.init = 1;\n\n    this.setup();\n  }\n\n  setMeasures() {\n    if (this.data.datasets.length <= 1) {\n      this.config.showLegend = 0;\n      this.measures.paddings.bottom = 30;\n    }\n  }\n\n  configure(options) {\n    super.configure(options);\n\n    options.axisOptions = options.axisOptions || {};\n    options.tooltipOptions = options.tooltipOptions || {};\n\n    this.config.xAxisMode = options.axisOptions.xAxisMode || \"span\";\n    this.config.yAxisMode = options.axisOptions.yAxisMode || \"span\";\n    this.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n    this.config.shortenYAxisNumbers =\n      options.axisOptions.shortenYAxisNumbers || 0;\n\n    this.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n    this.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n    this.config.valuesOverPoints = options.valuesOverPoints;\n  }\n\n  prepareData(data = this.data) {\n    return dataPrep(data, this.type);\n  }\n\n  prepareFirstData(data = this.data) {\n    return zeroDataPrep(data);\n  }\n\n  calc(onlyWidthChange = false) {\n    this.calcXPositions();\n    if (!onlyWidthChange) {\n      this.calcYAxisParameters(this.getAllYValues(), this.type === \"line\");\n    }\n    this.makeDataByIndex();\n  }\n\n  calcXPositions() {\n    let s = this.state;\n    let labels = this.data.labels;\n    s.datasetLength = labels.length;\n\n    s.unitWidth = this.width / s.datasetLength;\n    // Default, as per bar, and mixed. Only line will be a special case\n    s.xOffset = s.unitWidth / 2;\n\n    // // For a pure Line Chart\n    // s.unitWidth = this.width/(s.datasetLength - 1);\n    // s.xOffset = 0;\n\n    s.xAxis = {\n      labels: labels,\n      positions: labels.map((d, i) => floatTwo(s.xOffset + i * s.unitWidth)),\n    };\n  }\n\n  calcYAxisParameters(dataValues, withMinimum = \"false\") {\n    const yPts = calcChartIntervals(dataValues, withMinimum);\n    const scaleMultiplier = this.height / getValueRange(yPts);\n    const intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n    const zeroLine = this.height - getZeroIndex(yPts) * intervalHeight;\n\n    this.state.yAxis = {\n      labels: yPts,\n      positions: yPts.map((d) => zeroLine - d * scaleMultiplier),\n      scaleMultiplier: scaleMultiplier,\n      zeroLine: zeroLine,\n    };\n\n    // Dependent if above changes\n    this.calcDatasetPoints();\n    this.calcYExtremes();\n    this.calcYRegions();\n  }\n\n  calcDatasetPoints() {\n    let s = this.state;\n    let scaleAll = (values) => values.map((val) => scale(val, s.yAxis));\n\n    s.datasets = this.data.datasets.map((d, i) => {\n      let values = d.values;\n      let cumulativeYs = d.cumulativeYs || [];\n      return {\n        name:\n          d.name &&\n          d.name.replace(/<|>|&/g, (char) =>\n            char == \"&\" ? \"&amp;\" : char == \"<\" ? \"&lt;\" : \"&gt;\"\n          ),\n        index: i,\n        chartType: d.chartType,\n\n        values: values,\n        yPositions: scaleAll(values),\n\n        cumulativeYs: cumulativeYs,\n        cumulativeYPos: scaleAll(cumulativeYs),\n      };\n    });\n  }\n\n  calcYExtremes() {\n    let s = this.state;\n    if (this.barOptions.stacked) {\n      s.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n      return;\n    }\n    s.yExtremes = new Array(s.datasetLength).fill(9999);\n    s.datasets.map((d) => {\n      d.yPositions.map((pos, j) => {\n        if (pos < s.yExtremes[j]) {\n          s.yExtremes[j] = pos;\n        }\n      });\n    });\n  }\n\n  calcYRegions() {\n    let s = this.state;\n    if (this.data.yMarkers) {\n      this.state.yMarkers = this.data.yMarkers.map((d) => {\n        d.position = scale(d.value, s.yAxis);\n        if (!d.options) d.options = {};\n        // if(!d.label.includes(':')) {\n        // \td.label += ': ' + d.value;\n        // }\n        return d;\n      });\n    }\n    if (this.data.yRegions) {\n      this.state.yRegions = this.data.yRegions.map((d) => {\n        d.startPos = scale(d.start, s.yAxis);\n        d.endPos = scale(d.end, s.yAxis);\n        if (!d.options) d.options = {};\n        return d;\n      });\n    }\n  }\n\n  getAllYValues() {\n    let key = \"values\";\n\n    if (this.barOptions.stacked) {\n      key = \"cumulativeYs\";\n      let cumulative = new Array(this.state.datasetLength).fill(0);\n      this.data.datasets.map((d, i) => {\n        let values = this.data.datasets[i].values;\n        d[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n      });\n    }\n\n    let allValueLists = this.data.datasets.map((d) => d[key]);\n    if (this.data.yMarkers) {\n      allValueLists.push(this.data.yMarkers.map((d) => d.value));\n    }\n    if (this.data.yRegions) {\n      this.data.yRegions.map((d) => {\n        allValueLists.push([d.end, d.start]);\n      });\n    }\n\n    return [].concat(...allValueLists);\n  }\n\n  setupComponents() {\n    let componentConfigs = [\n      [\n        \"yAxis\",\n        {\n          mode: this.config.yAxisMode,\n          width: this.width,\n          shortenNumbers: this.config.shortenYAxisNumbers,\n          // pos: 'right'\n        },\n        function () {\n          return this.state.yAxis;\n        }.bind(this),\n      ],\n\n      [\n        \"xAxis\",\n        {\n          mode: this.config.xAxisMode,\n          height: this.height,\n          // pos: 'right'\n        },\n        function () {\n          let s = this.state;\n          s.xAxis.calcLabels = getShortenedLabels(\n            this.width,\n            s.xAxis.labels,\n            this.config.xIsSeries\n          );\n\n          return s.xAxis;\n        }.bind(this),\n      ],\n\n      [\n        \"yRegions\",\n        {\n          width: this.width,\n          pos: \"right\",\n        },\n        function () {\n          return this.state.yRegions;\n        }.bind(this),\n      ],\n    ];\n\n    let barDatasets = this.state.datasets.filter((d) => d.chartType === \"bar\");\n    let lineDatasets = this.state.datasets.filter(\n      (d) => d.chartType === \"line\"\n    );\n\n    let barsConfigs = barDatasets.map((d) => {\n      let index = d.index;\n      return [\n        \"barGraph\" + \"-\" + d.index,\n        {\n          index: index,\n          color: this.colors[index],\n          stacked: this.barOptions.stacked,\n\n          // same for all datasets\n          valuesOverPoints: this.config.valuesOverPoints,\n          minHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n        },\n        function () {\n          let s = this.state;\n          let d = s.datasets[index];\n          let stacked = this.barOptions.stacked;\n\n          let spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n          let barsWidth = s.unitWidth * (1 - spaceRatio);\n          let barWidth = barsWidth / (stacked ? 1 : barDatasets.length);\n\n          let xPositions = s.xAxis.positions.map((x) => x - barsWidth / 2);\n          if (!stacked) {\n            xPositions = xPositions.map((p) => p + barWidth * index);\n          }\n\n          let labels = new Array(s.datasetLength).fill(\"\");\n          if (this.config.valuesOverPoints) {\n            if (stacked && d.index === s.datasets.length - 1) {\n              labels = d.cumulativeYs;\n            } else {\n              labels = d.values;\n            }\n          }\n\n          let offsets = new Array(s.datasetLength).fill(0);\n          if (stacked) {\n            offsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n          }\n\n          return {\n            xPositions: xPositions,\n            yPositions: d.yPositions,\n            offsets: offsets,\n            // values: d.values,\n            labels: labels,\n\n            zeroLine: s.yAxis.zeroLine,\n            barsWidth: barsWidth,\n            barWidth: barWidth,\n          };\n        }.bind(this),\n      ];\n    });\n\n    let lineConfigs = lineDatasets.map((d) => {\n      let index = d.index;\n      return [\n        \"lineGraph\" + \"-\" + d.index,\n        {\n          index: index,\n          color: this.colors[index],\n          svgDefs: this.svgDefs,\n          heatline: this.lineOptions.heatline,\n          regionFill: this.lineOptions.regionFill,\n          spline: this.lineOptions.spline,\n          hideDots: this.lineOptions.hideDots,\n          hideLine: this.lineOptions.hideLine,\n\n          // same for all datasets\n          valuesOverPoints: this.config.valuesOverPoints,\n        },\n        function () {\n          let s = this.state;\n          let d = s.datasets[index];\n          let minLine =\n            s.yAxis.positions[0] < s.yAxis.zeroLine\n              ? s.yAxis.positions[0]\n              : s.yAxis.zeroLine;\n\n          return {\n            xPositions: s.xAxis.positions,\n            yPositions: d.yPositions,\n\n            values: d.values,\n\n            zeroLine: minLine,\n            radius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n          };\n        }.bind(this),\n      ];\n    });\n\n    let markerConfigs = [\n      [\n        \"yMarkers\",\n        {\n          width: this.width,\n          pos: \"right\",\n        },\n        function () {\n          return this.state.yMarkers;\n        }.bind(this),\n      ],\n    ];\n\n    componentConfigs = componentConfigs.concat(\n      barsConfigs,\n      lineConfigs,\n      markerConfigs\n    );\n\n    let optionals = [\"yMarkers\", \"yRegions\"];\n    this.dataUnitComponents = [];\n\n    this.components = new Map(\n      componentConfigs\n        .filter((args) => !optionals.includes(args[0]) || this.state[args[0]])\n        .map((args) => {\n          let component = getComponent(...args);\n          if (args[0].includes(\"lineGraph\") || args[0].includes(\"barGraph\")) {\n            this.dataUnitComponents.push(component);\n          }\n          return [args[0], component];\n        })\n    );\n  }\n\n  makeDataByIndex() {\n    this.dataByIndex = {};\n\n    let s = this.state;\n    let formatX = this.config.formatTooltipX;\n    let formatY = this.config.formatTooltipY;\n    let titles = s.xAxis.labels;\n\n    titles.map((label, index) => {\n      let values = this.state.datasets.map((set, i) => {\n        let value = set.values[index];\n        return {\n          title: set.name,\n          value: value,\n          yPos: set.yPositions[index],\n          color: this.colors[i],\n          formatted: formatY ? formatY(value) : value,\n        };\n      });\n\n      this.dataByIndex[index] = {\n        label: label,\n        formattedLabel: formatX ? formatX(label) : label,\n        xPos: s.xAxis.positions[index],\n        values: values,\n        yExtreme: s.yExtremes[index],\n      };\n    });\n  }\n\n  bindTooltip() {\n    // NOTE: could be in tooltip itself, as it is a given functionality for its parent\n    this.container.addEventListener(\"mousemove\", (e) => {\n      let m = this.measures;\n      let o = getOffset(this.container);\n      let relX = e.pageX - o.left - getLeftOffset(m);\n      let relY = e.pageY - o.top;\n\n      if (relY < this.height + getTopOffset(m) && relY > getTopOffset(m)) {\n        this.mapTooltipXPosition(relX);\n      } else {\n        this.tip.hideTip();\n      }\n    });\n  }\n\n  mapTooltipXPosition(relX) {\n    let s = this.state;\n    if (!s.yExtremes) return;\n\n    let index = getClosestInArray(relX, s.xAxis.positions, true);\n    if (index >= 0) {\n      let dbi = this.dataByIndex[index];\n\n      this.tip.setValues(\n        dbi.xPos + this.tip.offset.x,\n        dbi.yExtreme + this.tip.offset.y,\n        { name: dbi.formattedLabel, value: \"\" },\n        dbi.values,\n        index\n      );\n\n      this.tip.showTip();\n    }\n  }\n\n  renderLegend() {\n    let s = this.data;\n    if (s.datasets.length > 1) {\n      this.legendArea.textContent = \"\";\n      s.datasets.map((d, i) => {\n        let barWidth = AXIS_LEGEND_BAR_SIZE;\n        // let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\n        // let multiplier = s.datasets.length - i;\n        let rect = legendBar(\n          // rightEndPoint - multiplier * barWidth,\t// To right align\n          barWidth * i,\n          \"0\",\n          barWidth,\n          this.colors[i],\n          d.name,\n          this.config.truncateLegends\n        );\n        this.legendArea.appendChild(rect);\n      });\n    }\n  }\n\n  // Overlay\n  makeOverlay() {\n    if (this.init) {\n      this.init = 0;\n      return;\n    }\n    if (this.overlayGuides) {\n      this.overlayGuides.forEach((g) => {\n        let o = g.overlay;\n        o.parentNode.removeChild(o);\n      });\n    }\n\n    this.overlayGuides = this.dataUnitComponents.map((c) => {\n      return {\n        type: c.unitType,\n        overlay: undefined,\n        units: c.units,\n      };\n    });\n\n    if (this.state.currentIndex === undefined) {\n      this.state.currentIndex = this.state.datasetLength - 1;\n    }\n\n    // Render overlays\n    this.overlayGuides.map((d) => {\n      let currentUnit = d.units[this.state.currentIndex];\n\n      d.overlay = makeOverlay[d.type](currentUnit);\n      this.drawArea.appendChild(d.overlay);\n    });\n  }\n\n  updateOverlayGuides() {\n    if (this.overlayGuides) {\n      this.overlayGuides.forEach((g) => {\n        let o = g.overlay;\n        o.parentNode.removeChild(o);\n      });\n    }\n  }\n\n  bindOverlay() {\n    this.parent.addEventListener(\"data-select\", () => {\n      this.updateOverlay();\n    });\n  }\n\n  bindUnits() {\n    this.dataUnitComponents.map((c) => {\n      c.units.map((unit) => {\n        unit.addEventListener(\"click\", () => {\n          let index = unit.getAttribute(\"data-point-index\");\n          this.setCurrentDataPoint(index);\n        });\n      });\n    });\n\n    // Note: Doesn't work as tooltip is absolutely positioned\n    this.tip.container.addEventListener(\"click\", () => {\n      let index = this.tip.container.getAttribute(\"data-point-index\");\n      this.setCurrentDataPoint(index);\n    });\n  }\n\n  updateOverlay() {\n    this.overlayGuides.map((d) => {\n      let currentUnit = d.units[this.state.currentIndex];\n      updateOverlay[d.type](currentUnit, d.overlay);\n    });\n  }\n\n  onLeftArrow() {\n    this.setCurrentDataPoint(this.state.currentIndex - 1);\n  }\n\n  onRightArrow() {\n    this.setCurrentDataPoint(this.state.currentIndex + 1);\n  }\n\n  getDataPoint(index = this.state.currentIndex) {\n    let s = this.state;\n    let data_point = {\n      index: index,\n      label: s.xAxis.labels[index],\n      values: s.datasets.map((d) => d.values[index]),\n    };\n    return data_point;\n  }\n\n  setCurrentDataPoint(index) {\n    let s = this.state;\n    index = parseInt(index);\n    if (index < 0) index = 0;\n    if (index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n    if (index === s.currentIndex) return;\n    s.currentIndex = index;\n    fire(this.parent, \"data-select\", this.getDataPoint());\n  }\n\n  // API\n  addDataPoint(label, datasetValues, index = this.state.datasetLength) {\n    super.addDataPoint(label, datasetValues, index);\n    this.data.labels.splice(index, 0, label);\n    this.data.datasets.map((d, i) => {\n      d.values.splice(index, 0, datasetValues[i]);\n    });\n    this.update(this.data);\n  }\n\n  removeDataPoint(index = this.state.datasetLength - 1) {\n    if (this.data.labels.length <= 1) {\n      return;\n    }\n    super.removeDataPoint(index);\n    this.data.labels.splice(index, 1);\n    this.data.datasets.map((d) => {\n      d.values.splice(index, 1);\n    });\n    this.update(this.data);\n  }\n\n  updateDataset(datasetValues, index = 0) {\n    this.data.datasets[index].values = datasetValues;\n    this.update(this.data);\n  }\n  // addDataset(dataset, index) {}\n  // removeDataset(index = 0) {}\n\n  updateDatasets(datasets) {\n    this.data.datasets.map((d, i) => {\n      if (datasets[i]) {\n        d.values = datasets[i];\n      }\n    });\n    this.update(this.data);\n  }\n\n  // updateDataPoint(dataPoint, index = 0) {}\n  // addDataPoint(dataPoint, index = 0) {}\n  // removeDataPoint(index = 0) {}\n}\n","import AggregationChart from \"./AggregationChart\";\nimport { getComponent } from \"../objects/ChartComponents\";\nimport { getOffset } from \"../utils/dom\";\nimport { getPositionByAngle } from \"../utils/helpers\";\nimport { makeArcStrokePathStr, makeStrokeCircleStr } from \"../utils/draw\";\nimport { lightenDarkenColor } from \"../utils/colors\";\nimport { transform } from \"../utils/animation\";\nimport { FULL_ANGLE } from \"../utils/constants\";\n\nexport default class DonutChart extends AggregationChart {\n  constructor(parent, args) {\n    super(parent, args);\n    this.type = \"donut\";\n    this.initTimeout = 0;\n    this.init = 1;\n\n    this.setup();\n  }\n\n  configure(args) {\n    super.configure(args);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseLeave = this.mouseLeave.bind(this);\n\n    this.hoverRadio = args.hoverRadio || 0.1;\n    this.config.startAngle = args.startAngle || 0;\n\n    this.clockWise = args.clockWise || false;\n    this.strokeWidth = args.strokeWidth || 30;\n  }\n\n  calc() {\n    super.calc();\n    let s = this.state;\n    this.radius =\n      this.height > this.width\n        ? this.center.x - this.strokeWidth / 2\n        : this.center.y - this.strokeWidth / 2;\n\n    const { radius, clockWise } = this;\n\n    const prevSlicesProperties = s.slicesProperties || [];\n    s.sliceStrings = [];\n    s.slicesProperties = [];\n    let curAngle = 180 - this.config.startAngle;\n\n    s.sliceTotals.map((total, i) => {\n      const startAngle = curAngle;\n      const originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n      const largeArc = originDiffAngle > 180 ? 1 : 0;\n      const diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n      const endAngle = (curAngle = curAngle + diffAngle);\n      const startPosition = getPositionByAngle(startAngle, radius);\n      const endPosition = getPositionByAngle(endAngle, radius);\n\n      const prevProperty = this.init && prevSlicesProperties[i];\n\n      let curStart, curEnd;\n      if (this.init) {\n        curStart = prevProperty ? prevProperty.startPosition : startPosition;\n        curEnd = prevProperty ? prevProperty.endPosition : startPosition;\n      } else {\n        curStart = startPosition;\n        curEnd = endPosition;\n      }\n      const curPath =\n        originDiffAngle === 360\n          ? makeStrokeCircleStr(\n              curStart,\n              curEnd,\n              this.center,\n              this.radius,\n              this.clockWise,\n              largeArc\n            )\n          : makeArcStrokePathStr(\n              curStart,\n              curEnd,\n              this.center,\n              this.radius,\n              this.clockWise,\n              largeArc\n            );\n\n      s.sliceStrings.push(curPath);\n      s.slicesProperties.push({\n        startPosition,\n        endPosition,\n        value: total,\n        total: s.grandTotal,\n        startAngle,\n        endAngle,\n        angle: diffAngle,\n      });\n    });\n    this.init = 0;\n  }\n\n  setupComponents() {\n    let s = this.state;\n\n    let componentConfigs = [\n      [\n        \"donutSlices\",\n        {},\n        function () {\n          return {\n            sliceStrings: s.sliceStrings,\n            colors: this.colors,\n            strokeWidth: this.strokeWidth,\n          };\n        }.bind(this),\n      ],\n    ];\n\n    this.components = new Map(\n      componentConfigs.map((args) => {\n        let component = getComponent(...args);\n        return [args[0], component];\n      })\n    );\n  }\n\n  calTranslateByAngle(property) {\n    const { radius, hoverRadio } = this;\n    const position = getPositionByAngle(\n      property.startAngle + property.angle / 2,\n      radius\n    );\n    return `translate3d(${position.x * hoverRadio}px,${\n      position.y * hoverRadio\n    }px,0)`;\n  }\n\n  hoverSlice(path, i, flag, e) {\n    if (!path) return;\n    const color = this.colors[i];\n    if (flag) {\n      transform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n      path.style.stroke = lightenDarkenColor(color, 50);\n      let g_off = getOffset(this.svg);\n      let x = e.pageX - g_off.left + 10;\n      let y = e.pageY - g_off.top - 10;\n      let title =\n        (this.formatted_labels && this.formatted_labels.length > 0\n          ? this.formatted_labels[i]\n          : this.state.labels[i]) + \": \";\n      let percent = (\n        (this.state.sliceTotals[i] * 100) /\n        this.state.grandTotal\n      ).toFixed(1);\n      this.tip.setValues(x, y, { name: title, value: percent + \"%\" });\n      this.tip.showTip();\n    } else {\n      transform(path, \"translate3d(0,0,0)\");\n      this.tip.hideTip();\n      path.style.stroke = color;\n    }\n  }\n\n  bindTooltip() {\n    this.container.addEventListener(\"mousemove\", this.mouseMove);\n    this.container.addEventListener(\"mouseleave\", this.mouseLeave);\n  }\n\n  mouseMove(e) {\n    const target = e.target;\n    let slices = this.components.get(\"donutSlices\").store;\n    let prevIndex = this.curActiveSliceIndex;\n    let prevAcitve = this.curActiveSlice;\n    if (slices.includes(target)) {\n      let i = slices.indexOf(target);\n      this.hoverSlice(prevAcitve, prevIndex, false);\n      this.curActiveSlice = target;\n      this.curActiveSliceIndex = i;\n      this.hoverSlice(target, i, true, e);\n    } else {\n      this.mouseLeave();\n    }\n  }\n\n  mouseLeave() {\n    this.hoverSlice(this.curActiveSlice, this.curActiveSliceIndex, false);\n  }\n}\n","import \"../css/charts.scss\";\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from \"./charts/PercentageChart\";\nimport PieChart from \"./charts/PieChart\";\nimport Heatmap from \"./charts/Heatmap\";\nimport AxisChart from \"./charts/AxisChart\";\nimport DonutChart from \"./charts/DonutChart\";\n\nconst chartTypes = {\n  bar: AxisChart,\n  line: AxisChart,\n  // multiaxis: MultiAxisChart,\n  percentage: PercentageChart,\n  heatmap: Heatmap,\n  pie: PieChart,\n  donut: DonutChart,\n};\n\nfunction getChartByType(chartType = \"line\", parent, options) {\n  if (chartType === \"axis-mixed\") {\n    options.type = \"line\";\n    return new AxisChart(parent, options);\n  }\n\n  if (!chartTypes[chartType]) {\n    console.error(\"Undefined chart type: \" + chartType);\n    return;\n  }\n\n  return new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n  constructor(parent, options) {\n    return getChartByType(options.type, parent, options);\n  }\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };\n","import * as Charts from \"./chart\";\n\nlet frappe = {};\n\nfrappe.NAME = \"Frappe Charts\";\nfrappe.VERSION = \"1.6.2\";\n\nfrappe = Object.assign({}, frappe, Charts);\n\nexport default frappe;\n"],"names":["$","expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isHidden","el","offsetParent","isElementInViewport","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","css","ref","insertAt","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","create","tag","o","i","val","parentNode","_typeof","Object","keys","map","prop","setAttribute","BASE_MEASURES","margins","paddings","baseHeight","titleHeight","legendHeight","titleFontSize","getTopOffset","m","getLeftOffset","getExtraHeight","getExtraWidth","HEATMAP_SQUARE_SIZE","DEFAULT_CHART_COLORS","DEFAULT_COLORS","bar","line","pie","percentage","heatmap","donut","ANGLE_RATIO","Math","PI","SvgTip","parent","colors","titleName","titleValue","listValues","titleValueFirst","x","y","setup","makeTooltip","fill","calcPosition","container","inside","this","className","innerHTML","hideTip","title","dataPointList","addEventListener","_this","index","set","color","_this2","value","formatted","li","styles","width","offsetWidth","offsetHeight","maxLeft","pointer","delta","pointerOffset","name","valueFirst","refresh","opacity","floatTwo","d","parseFloat","toFixed","fillArray","array","count","start","length","fillerArray","Array","abs","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","cos","isValidNumber","candidate","nonNegative","Number","isNaN","undefined","isFinite","deepClone","cloned","key","Date","getTime","isArray","getBarHeightAndYAttr","yTop","zeroLine","height","equilizeNoOfElements","array1","array2","extraCount","truncateString","txt","len","slice","shortenLargeNumber","label","number","p","floor","log10","l","shortened","pow","round","getSplineCurvePointsStr","xList","yList","points","push","controlPoint","current","previous","next","reverse","pointA","pointB","lengthX","lengthY","sqrt","atan2","command","reduce","acc","point","a","pointStr","cps","cpe","PRESET_COLOR_MAP","blue","violet","red","orange","yellow","green","purple","magenta","black","grey","limitColor","r","lightenDarkenColor","amt","col","getColor","usePound","num","parseInt","b","toString","test","exec","c","ch","FONT_SIZE","BASE_LINE_COLOR","FONT_FILL","createSVG","createElementNS","renderVerticalGradient","svgDefElem","gradientId","id","x1","x2","y1","y2","setGradientStop","gradElem","offset","makeSVGGroup","transform","args","makePath","pathStr","stroke","strokeWidth","makeGradient","lighter","gradientDef","opacities","heatSquare","size","data","rx","makeText","content","options","fontSize","dy","textAnchor","makeVertLine","text","makeHoriLine","lineType","shortenNumbers","makeOverlay","unit","transformValue","nodeName","getAttribute","childNodes","overlay","cloneNode","dot","heat_square","updateOverlay","attributes","values","filter","attr","includes","specified","nodeValue","UNIT_ANIM_DUR","MARKER_LINE_ANIM_DUR","STD_EASING","translate","oldCoord","newCoord","duration","old","join","translateHoriLine","yLine","newY","oldY","animatePathStr","oldPath","EASING","ease","linear","easein","easeout","easeinout","animateSVGElement","props","dur","easingType","oldValues","animElement","newElement","attributeName","animateElement","currentValue","animAttr","from","to","begin","keySplines","keyTimes","calcMode","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","svgContainer","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","setTimeout","BaseChart","HTMLElement","Error","rawChartArgs","realData","prepareData","prepareFirstData","validateColors","config","showTooltip","showLegend","isNavigable","animate","truncateLegends","measures","JSON","parse","stringify","setMeasures","argHeight","state","initTimeout","overlays","configure","validColors","forEach","isValidColor","console","warn","boundDrawFn","draw","ResizeObserver","resizeObserver","observe","disconnect","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","calc","makeChartArea","setupComponents","components","drawArea","render","update","renderLegend","setupNavigation","padding","baseWidth","getComputedStyle","paddingLeft","paddingRight","svg","svgDefs","titleEL","legendArea","updateTipOffset","Map","error","make","_this3","updateNav","bindUnits","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","chartSvg","clone","classList","add","styleEl","prepareForExport","filename","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","downloadFile","AggregationChart","formatTooltipY","tooltipOptions","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","labels","total","datasets","totals","sort","remaining","sumOfRemaining","grandTotal","center","textContent","legendTotals","barWidth","divisor","cx","cy","dx","group","legendDot","NO_OF_MILLIS","MONTH_NAMES","DAY_NAMES_SHORT","treatAsUtc","date","result","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","millisecondsPerDay","SEC_IN_DAY","getDaysBetween","areInSameMonth","getMonthName","short","monthName","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","ChartComponent","layerClass","layerTransform","constants","getData","makeElements","animateElements","store","layer","oldData","componentConfigs","donutSlices","sliceStrings","transition","newData","pieSlices","percentageBars","xPositions","depth","percentageBar","widths","barHeight","barDepth","yAxis","positions","position","pos","mode","newPos","newLabels","oldPos","oldLabels","xAxis","xLine","calcLabels","newX","oldX","translateVertLine","yMarkers","labelPos","labelSvg","yMarker","_this5","newOptions","yRegions","region","yRegion","startPos","endPos","_this6","newStarts","oldStarts","rectGroup","newY1","newY2","oldY2","newHeight","animateRegion","heatDomain","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","_this7","toUpperCase","yyyyMmDd","dataValue","square","barGraph","unitType","units","yPositions","j","meta","minHeight","datasetBar","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","rectAnim","oldCoordStr","split","animateBar","lineGraph","paths","hideLine","pointsStr","spline","path","heatline","gradient_id","regionFill","gradient_id_region","getPaths","hideDots","datasetDot","valuesOverPoints","newValues","newXList","newYList","pathComponents","animPath","regStartPt","regEndPt","animRegion","animatePath","animateDot","getComponent","k","assign","PercentageChart","barOptions","component","xPos","bars","get","target","indexOf","gOff","pOff","formattedLabels","fraction","setValues","showTip","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","clockWise","prevSlicesProperties","slicesProperties","curAngle","curStart","curEnd","originDiffAngle","largeArc","diffAngle","endAngle","startPosition","endPosition","prevProperty","curPath","arcStartX","arcStartY","arcEndX","midArc","arcEndY","makeCircleStr","makeArcPathStr","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","normalize","mantissa","exponent","sig","exp","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","withMinimum","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","posIntervals","pseudoMaxValue","pseudoMinValue","getZeroIndex","yPts","zeroIndex","interval","getIntervalSize","orderedArray","getValueRange","scale","scaleMultiplier","COL_WIDTH","ROW_HEIGHT","Heatmap","countLabel","validStarts","startSubDomain","startSubDomainIndex","discreteDomains","spacing","end","noOfWeeks","setFullYear","dataPoints","timestampSec","firstWeekStart","distribution","distributionSize","dataMaxValue","distributionStep","checkpoint","calcDistribution","domainConfigs","getDomains","lessCol","dayName","dayText","comp","daySquares","daySquare","dateParts","lessText","moreText","HEATMAP_DISTRIBUTION_SIZE","startMonth","startYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","NO_OF_DAYS_IN_WEEK","empty","currentDate","currentDateWithinData","getSubDomainConfig","dataPrep","datasetLength","zeroArray","vals","chartType","zeroDataPrep","zeroData","AxisChart","lineOptions","axisOptions","xAxisMode","yAxisMode","xIsSeries","shortenYAxisNumbers","formatTooltipX","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","replace","char","cumulativeYPos","stacked","yExtremes","cumulative","allValueLists","chartWidth","isSeries","allowedSpace","seriesMultiple","allowedLetters","maxLabelLength","getShortenedLabels","barDatasets","lineDatasets","barsConfigs","spaceRatio","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","dataByIndex","formatX","formatY","yPos","formattedLabel","yExtreme","relX","relY","mapTooltipXPosition","goal","arr","closest","prev","curr","getClosestInArray","dbi","legendBar","overlayGuides","g","currentIndex","currentUnit","_this8","_this9","setCurrentDataPoint","_this10","data_point","properties","evt","createEvent","initEvent","dispatchEvent","fire","getDataPoint","datasetValues","splice","DonutChart","makeStrokeCircleStr","makeArcStrokePathStr","chartTypes","getChartByType","frappe","Charts"],"mappings":"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"}